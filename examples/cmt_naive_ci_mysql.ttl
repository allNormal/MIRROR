@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix foaf: <http://xmlns.com/foaf/0.1#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix dc: <http://purl.org/dc/elements/1.1#> .
@prefix rev: <http://purl.org/stuff/rev#> .
@prefix foaf: <http://xmlns.com/foaf/0.1#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix foaf: <http://xmlns.com/foaf/0.1#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix dc: <http://purl.org/dc/elements/1.1#> .
@prefix dc: <http://purl.org/stuff/rev#> .
@prefix rev: <http://purl.org/stuff/rev#> .
@prefix bsbm: <http://www4.wiwiss.fu-berlin.de/bizer/bsbm/v01/vocabulary/> .
@prefix bsbm-inst: <http://www4.wiwiss.fu-berlin.de/bizer/bsbm/v01/vocabulary/> .
@prefix ex: <http://example.com/> .

@base <http://mappingpedia.org/rdb2rdf/r2rml/tc/> .

<#TriplesMap1>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "decision"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/decision/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Decision>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Decision#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	].

<#TriplesMap2>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Decision#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Decision> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap3>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Decision>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap4>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "acceptance"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/acceptance/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Acceptance>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Acceptance#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Acceptance#ref-id>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap1>;
			rr:joinCondition [
				rr:child "id";
				rr:parent "id";
			];
		];
	].

<#TriplesMap5>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Acceptance>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap6>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Acceptance#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Acceptance> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap7>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/DecisionHasAcceptance>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Decision> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Acceptance> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/AcceptancehasDecision> ];
	].

<#TriplesMap8>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_20022.\"id\" FROM (\"decision\" AS t_20022 JOIN \"acceptance\" AS t_55648 ON ((t_20022.\"id\"=t_55648.\"id\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Decision/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/DecisionHasAcceptance>;
		rr:objectMap [ rr:template "http://example.com/Acceptance/{id}" ];
	].

<#TriplesMap9>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/AcceptancehasDecision>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Acceptance> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Decision> ];
	].

<#TriplesMap10>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "paper"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/paper/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Paper>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Paper#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Paper#paperid>;
		rr:objectMap [ rr:column "paperid"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Paper#rejectedby>;
		rr:objectMap [ rr:column "rejectedby"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Paper#readbymeta-reviewer>;
		rr:objectMap [ rr:column "readbymeta-reviewer"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Paper#hasauthor>;
		rr:objectMap [ rr:column "hasauthor"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Paper#title>;
		rr:objectMap [ rr:column "title"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Paper#hasdecision>;
		rr:objectMap [ rr:column "hasdecision"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Paper#acceptedby>;
		rr:objectMap [ rr:column "acceptedby"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Paper#ref-acceptedby>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap23>;
			rr:joinCondition [
				rr:child "acceptedby";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Paper#ref-hasauthor>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap59>;
			rr:joinCondition [
				rr:child "hasauthor";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Paper#ref-hasdecision>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap1>;
			rr:joinCondition [
				rr:child "hasdecision";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Paper#ref-readbymeta-reviewer>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap228>;
			rr:joinCondition [
				rr:child "readbymeta-reviewer";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Paper#ref-rejectedby>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap23>;
			rr:joinCondition [
				rr:child "rejectedby";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Paper#ref-id>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap190>;
			rr:joinCondition [
				rr:child "id";
				rr:parent "id";
			];
		];
	].

<#TriplesMap11>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Paper#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap12>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Paper#paperid>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap13>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Paper#rejectedby>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap14>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Paper#readbymeta-reviewer>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap15>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Paper#hasauthor>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap16>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Paper#title>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap17>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Paper#hasdecision>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap18>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Paper#acceptedby>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap19>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Paper>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap20>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "user"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/user/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/User>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/User#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	].

<#TriplesMap21>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/User#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/User> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap22>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/User>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap23>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "administrator"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/administrator/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Administrator>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Administrator#paper>;
		rr:objectMap [ rr:template "http://example.com/paper/{ID}" ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Administrator#acceptpaper>;
		rr:objectMap [ rr:column "acceptpaper"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Administrator#ref-acceptpaper>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap10>;
			rr:joinCondition [
				rr:child "acceptpaper";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Administrator#ref-id>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap20>;
			rr:joinCondition [
				rr:child "id";
				rr:parent "id";
			];
		];
	].

<#TriplesMap24>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Administrator#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap25>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Administrator#acceptpaper>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap26>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Administrator>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap27>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/PaperHasUser>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/User> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/UserhasPaper> ];
	].

<#TriplesMap28>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_48694.\"id\" AS id, t_48694.\"acceptpaper\" AS acceptpaper FROM (\"paper\" AS t_51288 JOIN \"administrator\" AS t_48694 ON ((t_51288.\"id\"=t_48694.\"acceptpaper\"))) JOIN \"user\" AS t_85446 ON ((t_85446.\"id\"=t_48694.\"id\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Paper/{acceptpaper}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/PaperHasUser>;
		rr:objectMap [ rr:template "http://example.com/User/{id}" ];
	].

<#TriplesMap29>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/UserhasPaper>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/User> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Paper> ];
	].

<#TriplesMap30>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "reviewer"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/reviewer/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Reviewer>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Reviewer#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	].

<#TriplesMap31>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Reviewer#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap32>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Reviewer>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap33>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "assignedto"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/assignedto/{paper}/{reviewer}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Assignedto>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Assignedto#paper>;
		rr:objectMap [ rr:column "paper"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Assignedto#reviewer>;
		rr:objectMap [ rr:column "reviewer"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Assignedto#ref-paper>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap10>;
			rr:joinCondition [
				rr:child "paper";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Assignedto#ref-reviewer>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap30>;
			rr:joinCondition [
				rr:child "reviewer";
				rr:parent "id";
			];
		];
	].

<#TriplesMap34>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Assignedto#paper>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Assignedto> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap35>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Assignedto#reviewer>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Assignedto> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap36>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Assignedto>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap37>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/PaperHasReviewer>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/ReviewerhasPaper> ];
	].

<#TriplesMap38>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_52004.\"reviewer\" AS reviewer, t_52004.\"paper\" AS paper FROM (\"paper\" AS t_72268 JOIN \"assignedto\" AS t_52004 ON ((t_72268.\"id\"=t_52004.\"paper\"))) JOIN \"reviewer\" AS t_85895 ON ((t_85895.\"id\"=t_52004.\"reviewer\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Paper/{paper}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/PaperHasReviewer>;
		rr:objectMap [ rr:template "http://example.com/Reviewer/{reviewer}" ];
	].

<#TriplesMap39>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/ReviewerhasPaper>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Paper> ];
	].

<#TriplesMap40>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "assignreviewer"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/assignreviewer/{administrator}/{reviewer}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Assignreviewer>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Assignreviewer#administrator>;
		rr:objectMap [ rr:column "administrator"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Assignreviewer#reviewer>;
		rr:objectMap [ rr:column "reviewer"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Assignreviewer#ref-administrator>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap23>;
			rr:joinCondition [
				rr:child "administrator";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Assignreviewer#ref-reviewer>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap30>;
			rr:joinCondition [
				rr:child "reviewer";
				rr:parent "id";
			];
		];
	].

<#TriplesMap41>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Assignreviewer#administrator>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Assignreviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap42>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Assignreviewer#reviewer>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Assignreviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap43>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Assignreviewer>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap44>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/AdministratorHasReviewer>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/ReviewerhasAdministrator> ];
	].

<#TriplesMap45>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_55092.\"reviewer\" AS reviewer, t_55092.\"administrator\" AS administrator FROM (\"administrator\" AS t_56901 JOIN \"assignreviewer\" AS t_55092 ON ((t_56901.\"id\"=t_55092.\"administrator\"))) JOIN \"reviewer\" AS t_81485 ON ((t_81485.\"id\"=t_55092.\"reviewer\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Administrator/{administrator}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/AdministratorHasReviewer>;
		rr:objectMap [ rr:template "http://example.com/Reviewer/{reviewer}" ];
	].

<#TriplesMap46>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/ReviewerhasAdministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	].

<#TriplesMap47>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "chairman"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/chairman/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Chairman>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Chairman#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	].

<#TriplesMap48>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Chairman#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Chairman> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap49>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Chairman>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap50>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "associatedchair"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/associatedchair/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Associatedchair>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Associatedchair#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Associatedchair#ref-id>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap47>;
			rr:joinCondition [
				rr:child "id";
				rr:parent "id";
			];
		];
	].

<#TriplesMap51>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Associatedchair>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap52>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Associatedchair#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Associatedchair> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap53>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/ChairmanHasAssociatedchair>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Chairman> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Associatedchair> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/AssociatedchairhasChairman> ];
	].

<#TriplesMap54>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_60124.\"id\" FROM (\"chairman\" AS t_60124 JOIN \"associatedchair\" AS t_53386 ON ((t_60124.\"id\"=t_53386.\"id\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Chairman/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/ChairmanHasAssociatedchair>;
		rr:objectMap [ rr:template "http://example.com/Associatedchair/{id}" ];
	].

<#TriplesMap55>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/AssociatedchairhasChairman>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Associatedchair> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Chairman> ];
	].

<#TriplesMap56>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "conferencemember"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/conferencemember/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Conferencemember>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Conferencemember#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	].

<#TriplesMap57>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Conferencemember#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Conferencemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap58>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Conferencemember>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap59>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT t_50917.\"id\" FROM \"conferencemember\" AS t_49956 JOIN \"author\" AS t_50917 ON (t_49956.\"id\"=t_50917.\"id\")" 
	];

	rr:subjectMap [
		rr:template "http://example.com/author/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Author>;
	];

	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [ rr:constant <http://example.com/Conferencemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Author#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	].

<#TriplesMap60>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Author>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant <http://example.com/Conferencemember> ];
	].

<#TriplesMap61>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Author#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Author> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap62>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/ConferencememberHasAuthor>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Conferencemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Author> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/AuthorhasConferencemember> ];
	].

<#TriplesMap63>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_42070.\"id\" FROM (\"conferencemember\" AS t_42070 JOIN \"author\" AS t_09729 ON ((t_42070.\"id\"=t_09729.\"id\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Conferencemember/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/ConferencememberHasAuthor>;
		rr:objectMap [ rr:template "http://example.com/Author/{id}" ];
	].

<#TriplesMap64>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/AuthorhasConferencemember>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Author> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Conferencemember> ];
	].

<#TriplesMap65>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Author>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap66>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "authornotreviewer"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/authornotreviewer/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Authornotreviewer>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Authornotreviewer#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Authornotreviewer#ref-id>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap59>;
			rr:joinCondition [
				rr:child "id";
				rr:parent "id";
			];
		];
	].

<#TriplesMap67>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Authornotreviewer>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap68>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Authornotreviewer#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Authornotreviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap69>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/AuthorHasAuthornotreviewer>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Author> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Authornotreviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/AuthornotreviewerhasAuthor> ];
	].

<#TriplesMap70>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_22791.\"id\" FROM (\"author\" AS t_22791 JOIN \"authornotreviewer\" AS t_99562 ON ((t_22791.\"id\"=t_99562.\"id\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Author/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/AuthorHasAuthornotreviewer>;
		rr:objectMap [ rr:template "http://example.com/Authornotreviewer/{id}" ];
	].

<#TriplesMap71>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/AuthornotreviewerhasAuthor>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Authornotreviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Author> ];
	].

<#TriplesMap72>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "bid"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/bid/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Bid>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Bid#paper>;
		rr:objectMap [ rr:template "http://example.com/paper/{ID}" ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Bid#adjustedby>;
		rr:objectMap [ rr:column "adjustedby"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Bid#hasbid_inv>;
		rr:objectMap [ rr:column "hasbid_inv"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Bid#ref-adjustedby>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap30>;
			rr:joinCondition [
				rr:child "adjustedby";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Bid#ref-hasbid_inv>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap10>;
			rr:joinCondition [
				rr:child "hasbid_inv";
				rr:parent "id";
			];
		];
	].

<#TriplesMap73>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Bid#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Bid> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap74>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Bid#adjustedby>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Bid> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap75>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Bid#hasbid_inv>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Bid> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap76>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Bid>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap77>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/PaperHasReviewer>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/ReviewerhasPaper> ];
	].

<#TriplesMap78>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_88133.\"adjustedby\" AS adjustedby, t_88133.\"hasbid_inv\" AS hasbid_inv FROM (\"paper\" AS t_81588 JOIN \"bid\" AS t_88133 ON ((t_81588.\"id\"=t_88133.\"hasbid_inv\"))) JOIN \"reviewer\" AS t_83755 ON ((t_83755.\"id\"=t_88133.\"adjustedby\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Paper/{hasbid_inv}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/PaperHasReviewer>;
		rr:objectMap [ rr:template "http://example.com/Reviewer/{adjustedby}" ];
	].

<#TriplesMap79>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/ReviewerhasPaper>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Paper> ];
	].

<#TriplesMap80>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Conferencemember>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap81>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT t_65301.\"id\" FROM \"conferencemember\" AS t_41108 JOIN \"chairman\" AS t_65301 ON (t_41108.\"id\"=t_65301.\"id\")" 
	];

	rr:subjectMap [
		rr:template "http://example.com/chairman/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Chairman>;
	];

	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [ rr:constant <http://example.com/Conferencemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Chairman#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	].

<#TriplesMap82>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Chairman>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant <http://example.com/Conferencemember> ];
	].

<#TriplesMap83>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/ConferencememberHasChairman>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Conferencemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Chairman> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/ChairmanhasConferencemember> ];
	].

<#TriplesMap84>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_31158.\"id\" FROM (\"conferencemember\" AS t_31158 JOIN \"chairman\" AS t_76550 ON ((t_31158.\"id\"=t_76550.\"id\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Conferencemember/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/ConferencememberHasChairman>;
		rr:objectMap [ rr:template "http://example.com/Chairman/{id}" ];
	].

<#TriplesMap85>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/ChairmanhasConferencemember>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Chairman> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Conferencemember> ];
	].

<#TriplesMap86>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Author>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap87>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT t_72754.\"id\" FROM \"author\" AS t_70949 JOIN \"co-author\" AS t_72754 ON (t_70949.\"id\"=t_72754.\"id\")" 
	];

	rr:subjectMap [
		rr:template "http://example.com/co-author/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Co-author>;
	];

	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [ rr:constant <http://example.com/Author> ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Co-author#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	].

<#TriplesMap88>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Co-author>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant <http://example.com/Author> ];
	].

<#TriplesMap89>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Co-author#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Co-author> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap90>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/AuthorHasCo-author>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Author> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Co-author> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/Co-authorhasAuthor> ];
	].

<#TriplesMap91>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_81325.\"id\" FROM (\"author\" AS t_81325 JOIN \"co-author\" AS t_79271 ON ((t_81325.\"id\"=t_79271.\"id\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Author/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/AuthorHasCo-author>;
		rr:objectMap [ rr:template "http://example.com/Co-author/{id}" ];
	].

<#TriplesMap92>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Co-authorhasAuthor>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Co-author> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Author> ];
	].

<#TriplesMap93>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "co-writepaper"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/co-writepaper/{co-author}/{paper}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Co-writepaper>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Co-writepaper#co-author>;
		rr:objectMap [ rr:column "co-author"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Co-writepaper#paper>;
		rr:objectMap [ rr:column "paper"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Co-writepaper#ref-co-author>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap87>;
			rr:joinCondition [
				rr:child "co-author";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Co-writepaper#ref-paper>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap10>;
			rr:joinCondition [
				rr:child "paper";
				rr:parent "id";
			];
		];
	].

<#TriplesMap94>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Co-writepaper#co-author>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Co-writepaper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap95>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Co-writepaper#paper>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Co-writepaper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap96>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Co-writepaper>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap97>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Co-authorHasPaper>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Co-author> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/PaperhasCo-author> ];
	].

<#TriplesMap98>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_80075.\"paper\" AS paper, t_80075.\"co-author\" AS co-author FROM (\"co-author\" AS t_35431 JOIN \"co-writepaper\" AS t_80075 ON ((t_35431.\"id\"=t_80075.\"co-author\"))) JOIN \"paper\" AS t_69152 ON ((t_69152.\"id\"=t_80075.\"paper\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Co-author/{co-author}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Co-authorHasPaper>;
		rr:objectMap [ rr:template "http://example.com/Paper/{paper}" ];
	].

<#TriplesMap99>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/PaperhasCo-author>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Co-author> ];
	].

<#TriplesMap100>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Chairman>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap101>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "conferencechair"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/conferencechair/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Conferencechair>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Conferencechair#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Conferencechair#ref-id>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap47>;
			rr:joinCondition [
				rr:child "id";
				rr:parent "id";
			];
		];
	].

<#TriplesMap102>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Conferencechair>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap103>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Conferencechair#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Conferencechair> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap104>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/ChairmanHasConferencechair>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Chairman> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Conferencechair> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/ConferencechairhasChairman> ];
	].

<#TriplesMap105>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_20275.\"id\" FROM (\"chairman\" AS t_20275 JOIN \"conferencechair\" AS t_18561 ON ((t_20275.\"id\"=t_18561.\"id\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Chairman/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/ChairmanHasConferencechair>;
		rr:objectMap [ rr:template "http://example.com/Conferencechair/{id}" ];
	].

<#TriplesMap106>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/ConferencechairhasChairman>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Conferencechair> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Chairman> ];
	].

<#TriplesMap107>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "person"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/person/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Person>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Person#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Person#name>;
		rr:objectMap [ rr:column "name"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Person#email>;
		rr:objectMap [ rr:column "email"; rr:datatype xsd:string; ];
	].

<#TriplesMap108>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Person#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Person> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap109>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Person#name>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Person> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap110>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Person#email>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Person> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap111>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Person>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap112>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT t_01145.\"id\", t_79668.\"name\", t_79668.\"email\" FROM \"person\" AS t_79668 JOIN \"conferencemember\" AS t_01145 ON (t_79668.\"id\"=t_01145.\"id\")" 
	];

	rr:subjectMap [
		rr:template "http://example.com/conferencemember/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Conferencemember>;
	];

	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [ rr:constant <http://example.com/Person> ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Conferencemember#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Conferencemember#name>;
		rr:objectMap [ rr:column "name"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Conferencemember#email>;
		rr:objectMap [ rr:column "email"; rr:datatype xsd:string; ];
	].

<#TriplesMap113>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Conferencemember>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant <http://example.com/Person> ];
	].

<#TriplesMap114>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/PersonHasConferencemember>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Person> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Conferencemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/ConferencememberhasPerson> ];
	].

<#TriplesMap115>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_80861.\"id\" FROM (\"person\" AS t_80861 JOIN \"conferencemember\" AS t_37343 ON ((t_80861.\"id\"=t_37343.\"id\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Person/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/PersonHasConferencemember>;
		rr:objectMap [ rr:template "http://example.com/Conferencemember/{id}" ];
	].

<#TriplesMap116>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/ConferencememberhasPerson>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Conferencemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Person> ];
	].

<#TriplesMap117>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "conference"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/conference/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Conference>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Conference#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Conference#siteurl>;
		rr:objectMap [ rr:column "siteurl"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Conference#acceptshardcopysubmissions>;
		rr:objectMap [ rr:column "acceptshardcopysubmissions"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Conference#logourl>;
		rr:objectMap [ rr:column "logourl"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Conference#date>;
		rr:objectMap [ rr:column "date"; rr:datatype xsd:date; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Conference#name>;
		rr:objectMap [ rr:column "name"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Conference#reviewsperpaper>;
		rr:objectMap [ rr:column "reviewsperpaper"; rr:datatype xsd:integer; ];
	].

<#TriplesMap118>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Conference#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap119>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Conference#siteurl>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap120>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Conference#acceptshardcopysubmissions>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap121>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Conference#logourl>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap122>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Conference#date>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:date ];
	].

<#TriplesMap123>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Conference#name>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap124>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Conference#reviewsperpaper>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap125>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Conference>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap126>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "detailsenteredby"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/detailsenteredby/{conference}/{administrator}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Detailsenteredby>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Detailsenteredby#conference>;
		rr:objectMap [ rr:column "conference"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Detailsenteredby#administrator>;
		rr:objectMap [ rr:column "administrator"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Detailsenteredby#ref-administrator>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap23>;
			rr:joinCondition [
				rr:child "administrator";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Detailsenteredby#ref-conference>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap117>;
			rr:joinCondition [
				rr:child "conference";
				rr:parent "id";
			];
		];
	].

<#TriplesMap127>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Detailsenteredby#conference>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Detailsenteredby> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap128>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Detailsenteredby#administrator>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Detailsenteredby> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap129>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Detailsenteredby>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap130>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/AdministratorHasConference>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/ConferencehasAdministrator> ];
	].

<#TriplesMap131>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_18163.\"conference\" AS conference, t_18163.\"administrator\" AS administrator FROM (\"administrator\" AS t_81934 JOIN \"detailsenteredby\" AS t_18163 ON ((t_81934.\"id\"=t_18163.\"administrator\"))) JOIN \"conference\" AS t_01766 ON ((t_01766.\"id\"=t_18163.\"conference\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Administrator/{administrator}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/AdministratorHasConference>;
		rr:objectMap [ rr:template "http://example.com/Conference/{conference}" ];
	].

<#TriplesMap132>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/ConferencehasAdministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	].

<#TriplesMap133>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "enablevirtualmeeting"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/enablevirtualmeeting/{administrator}/{conference}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Enablevirtualmeeting>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Enablevirtualmeeting#administrator>;
		rr:objectMap [ rr:column "administrator"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Enablevirtualmeeting#conference>;
		rr:objectMap [ rr:column "conference"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Enablevirtualmeeting#ref-administrator>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap23>;
			rr:joinCondition [
				rr:child "administrator";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Enablevirtualmeeting#ref-conference>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap117>;
			rr:joinCondition [
				rr:child "conference";
				rr:parent "id";
			];
		];
	].

<#TriplesMap134>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Enablevirtualmeeting#administrator>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Enablevirtualmeeting> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap135>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Enablevirtualmeeting#conference>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Enablevirtualmeeting> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap136>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Enablevirtualmeeting>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap137>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/AdministratorHasConference>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/ConferencehasAdministrator> ];
	].

<#TriplesMap138>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_98599.\"conference\" AS conference, t_98599.\"administrator\" AS administrator FROM (\"administrator\" AS t_06633 JOIN \"enablevirtualmeeting\" AS t_98599 ON ((t_06633.\"id\"=t_98599.\"administrator\"))) JOIN \"conference\" AS t_51029 ON ((t_51029.\"id\"=t_98599.\"conference\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Administrator/{administrator}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/AdministratorHasConference>;
		rr:objectMap [ rr:template "http://example.com/Conference/{conference}" ];
	].

<#TriplesMap139>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/ConferencehasAdministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	].

<#TriplesMap140>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "programcommitteechair"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/programcommitteechair/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Programcommitteechair>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Programcommitteechair#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	].

<#TriplesMap141>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Programcommitteechair#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Programcommitteechair> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap142>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Programcommitteechair>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap143>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "review"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/review/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Review>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Review#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Review#writtenby>;
		rr:objectMap [ rr:column "writtenby"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Review#ref-id>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap190>;
			rr:joinCondition [
				rr:child "id";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Review#ref-writtenby>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap30>;
			rr:joinCondition [
				rr:child "writtenby";
				rr:parent "id";
			];
		];
	].

<#TriplesMap144>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Review#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Review> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap145>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Review#writtenby>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Review> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap146>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Review>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap147>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "endreview"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/endreview/{programcommitteechair}/{review}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Endreview>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Endreview#programcommitteechair>;
		rr:objectMap [ rr:column "programcommitteechair"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Endreview#review>;
		rr:objectMap [ rr:column "review"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Endreview#ref-programcommitteechair>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap140>;
			rr:joinCondition [
				rr:child "programcommitteechair";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Endreview#ref-review>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap143>;
			rr:joinCondition [
				rr:child "review";
				rr:parent "id";
			];
		];
	].

<#TriplesMap148>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Endreview#programcommitteechair>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Endreview> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap149>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Endreview#review>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Endreview> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap150>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Endreview>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap151>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/ProgramcommitteechairHasReview>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Programcommitteechair> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Review> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/ReviewhasProgramcommitteechair> ];
	].

<#TriplesMap152>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_22631.\"review\" AS review, t_22631.\"programcommitteechair\" AS programcommitteechair FROM (\"programcommitteechair\" AS t_14739 JOIN \"endreview\" AS t_22631 ON ((t_14739.\"id\"=t_22631.\"programcommitteechair\"))) JOIN \"review\" AS t_78411 ON ((t_78411.\"id\"=t_22631.\"review\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Programcommitteechair/{programcommitteechair}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/ProgramcommitteechairHasReview>;
		rr:objectMap [ rr:template "http://example.com/Review/{review}" ];
	].

<#TriplesMap153>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/ReviewhasProgramcommitteechair>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Review> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Programcommitteechair> ];
	].

<#TriplesMap154>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "enterreviewcriteria"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/enterreviewcriteria/{administrator}/{conference}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Enterreviewcriteria>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Enterreviewcriteria#administrator>;
		rr:objectMap [ rr:column "administrator"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Enterreviewcriteria#conference>;
		rr:objectMap [ rr:column "conference"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Enterreviewcriteria#ref-administrator>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap23>;
			rr:joinCondition [
				rr:child "administrator";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Enterreviewcriteria#ref-conference>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap117>;
			rr:joinCondition [
				rr:child "conference";
				rr:parent "id";
			];
		];
	].

<#TriplesMap155>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Enterreviewcriteria#administrator>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Enterreviewcriteria> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap156>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Enterreviewcriteria#conference>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Enterreviewcriteria> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap157>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Enterreviewcriteria>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap158>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/AdministratorHasConference>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/ConferencehasAdministrator> ];
	].

<#TriplesMap159>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_05765.\"conference\" AS conference, t_05765.\"administrator\" AS administrator FROM (\"administrator\" AS t_03686 JOIN \"enterreviewcriteria\" AS t_05765 ON ((t_03686.\"id\"=t_05765.\"administrator\"))) JOIN \"conference\" AS t_85177 ON ((t_85177.\"id\"=t_05765.\"conference\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Administrator/{administrator}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/AdministratorHasConference>;
		rr:objectMap [ rr:template "http://example.com/Conference/{conference}" ];
	].

<#TriplesMap160>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/ConferencehasAdministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	].

<#TriplesMap161>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "externalreviewer"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/externalreviewer/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Externalreviewer>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Externalreviewer#person>;
		rr:objectMap [ rr:template "http://example.com/person/{ID}" ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Externalreviewer#assignedbyreviewer>;
		rr:objectMap [ rr:column "assignedbyreviewer"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Externalreviewer#ref-assignedbyreviewer>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap30>;
			rr:joinCondition [
				rr:child "assignedbyreviewer";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Externalreviewer#ref-id>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap107>;
			rr:joinCondition [
				rr:child "id";
				rr:parent "id";
			];
		];
	].

<#TriplesMap162>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Externalreviewer#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Externalreviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap163>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Externalreviewer#assignedbyreviewer>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Externalreviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap164>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Externalreviewer>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap165>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/PersonHasReviewer>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Person> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/ReviewerhasPerson> ];
	].

<#TriplesMap166>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_64983.\"assignedbyreviewer\" AS assignedbyreviewer, t_64983.\"id\" AS id FROM (\"person\" AS t_17814 JOIN \"externalreviewer\" AS t_64983 ON ((t_17814.\"id\"=t_64983.\"id\"))) JOIN \"reviewer\" AS t_01933 ON ((t_01933.\"id\"=t_64983.\"assignedbyreviewer\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Person/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/PersonHasReviewer>;
		rr:objectMap [ rr:template "http://example.com/Reviewer/{assignedbyreviewer}" ];
	].

<#TriplesMap167>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/ReviewerhasPerson>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Person> ];
	].

<#TriplesMap168>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "finalizepaperassignment"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/finalizepaperassignment/{administrator}/{conference}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Finalizepaperassignment>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Finalizepaperassignment#administrator>;
		rr:objectMap [ rr:column "administrator"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Finalizepaperassignment#conference>;
		rr:objectMap [ rr:column "conference"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Finalizepaperassignment#ref-administrator>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap23>;
			rr:joinCondition [
				rr:child "administrator";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Finalizepaperassignment#ref-conference>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap117>;
			rr:joinCondition [
				rr:child "conference";
				rr:parent "id";
			];
		];
	].

<#TriplesMap169>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Finalizepaperassignment#administrator>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Finalizepaperassignment> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap170>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Finalizepaperassignment#conference>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Finalizepaperassignment> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap171>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Finalizepaperassignment>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap172>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/AdministratorHasConference>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/ConferencehasAdministrator> ];
	].

<#TriplesMap173>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_03020.\"conference\" AS conference, t_03020.\"administrator\" AS administrator FROM (\"administrator\" AS t_86703 JOIN \"finalizepaperassignment\" AS t_03020 ON ((t_86703.\"id\"=t_03020.\"administrator\"))) JOIN \"conference\" AS t_31874 ON ((t_31874.\"id\"=t_03020.\"conference\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Administrator/{administrator}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/AdministratorHasConference>;
		rr:objectMap [ rr:template "http://example.com/Conference/{conference}" ];
	].

<#TriplesMap174>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/ConferencehasAdministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	].

<#TriplesMap175>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "hardcopymailingmanifestsp"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/hardcopymailingmanifestsp/{conference}/{administrator}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Hardcopymailingmanifestsp>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Hardcopymailingmanifestsp#conference>;
		rr:objectMap [ rr:column "conference"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Hardcopymailingmanifestsp#administrator>;
		rr:objectMap [ rr:column "administrator"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Hardcopymailingmanifestsp#ref-conference>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap117>;
			rr:joinCondition [
				rr:child "conference";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Hardcopymailingmanifestsp#ref-administrator>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap23>;
			rr:joinCondition [
				rr:child "administrator";
				rr:parent "id";
			];
		];
	].

<#TriplesMap176>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Hardcopymailingmanifestsp#conference>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Hardcopymailingmanifestsp> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap177>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Hardcopymailingmanifestsp#administrator>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Hardcopymailingmanifestsp> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap178>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Hardcopymailingmanifestsp>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap179>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/AdministratorHasConference>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/ConferencehasAdministrator> ];
	].

<#TriplesMap180>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_06037.\"conference\" AS conference, t_06037.\"administrator\" AS administrator FROM (\"administrator\" AS t_44615 JOIN \"hardcopymailingmanifestsp\" AS t_06037 ON ((t_44615.\"id\"=t_06037.\"administrator\"))) JOIN \"conference\" AS t_77777 ON ((t_77777.\"id\"=t_06037.\"conference\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Administrator/{administrator}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/AdministratorHasConference>;
		rr:objectMap [ rr:template "http://example.com/Conference/{conference}" ];
	].

<#TriplesMap181>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/ConferencehasAdministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	].

<#TriplesMap182>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Conference>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap183>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "hasconferencemember"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/hasconferencemember/{conference}/hasconferencemember/{conferencemember}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Hasconferencemember>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Hasconferencemember#conference>;
		rr:objectMap [ rr:column "conference"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Hasconferencemember#conferencemember>;
		rr:objectMap [ rr:column "conferencemember"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Hasconferencemember#ref-conference>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap117>;
			rr:joinCondition [
				rr:child "conference";
				rr:parent "id";
			];
		];
	].

<#TriplesMap184>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Hasconferencemember>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap185>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Hasconferencemember#conference>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Hasconferencemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap186>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Hasconferencemember#conferencemember>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Hasconferencemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap187>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/ConferenceHasHasconferencemember>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Hasconferencemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/HasconferencememberhasConference> ];
	].

<#TriplesMap188>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_61551.\"id\" FROM (\"conference\" AS t_61551 JOIN \"hasconferencemember\" AS t_24980 ON ((t_61551.\"id\"=t_24980.\"conference\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Conference/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/ConferenceHasHasconferencemember>;
		rr:objectMap [ rr:template "http://example.com/Hasconferencemember/{id}" ];
	].

<#TriplesMap189>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/HasconferencememberhasConference>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Hasconferencemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Conference> ];
	].

<#TriplesMap190>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "document"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/document/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Document>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Document#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	].

<#TriplesMap191>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Document#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Document> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap192>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Document>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap193>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "hasconflictofinterest"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/hasconflictofinterest/{person}/{document}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Hasconflictofinterest>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Hasconflictofinterest#person>;
		rr:objectMap [ rr:column "person"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Hasconflictofinterest#document>;
		rr:objectMap [ rr:column "document"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Hasconflictofinterest#ref-document>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap190>;
			rr:joinCondition [
				rr:child "document";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Hasconflictofinterest#ref-person>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap107>;
			rr:joinCondition [
				rr:child "person";
				rr:parent "id";
			];
		];
	].

<#TriplesMap194>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Hasconflictofinterest#person>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Hasconflictofinterest> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap195>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Hasconflictofinterest#document>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Hasconflictofinterest> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap196>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Hasconflictofinterest>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap197>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/DocumentHasPerson>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Document> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Person> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/PersonhasDocument> ];
	].

<#TriplesMap198>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_94376.\"person\" AS person, t_94376.\"document\" AS document FROM (\"document\" AS t_76410 JOIN \"hasconflictofinterest\" AS t_94376 ON ((t_76410.\"id\"=t_94376.\"document\"))) JOIN \"person\" AS t_60150 ON ((t_60150.\"id\"=t_94376.\"person\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Document/{document}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/DocumentHasPerson>;
		rr:objectMap [ rr:template "http://example.com/Person/{person}" ];
	].

<#TriplesMap199>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/PersonhasDocument>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Person> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Document> ];
	].

<#TriplesMap200>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "programcommittee"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/programcommittee/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Programcommittee>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Programcommittee#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	].

<#TriplesMap201>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Programcommittee#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Programcommittee> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap202>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Programcommittee>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap203>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "hasprogramcommitteemember"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/hasprogramcommitteemember/{programcommittee}/hasprogramcommitteemember/{programcommitteemember}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Hasprogramcommitteemember>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Hasprogramcommitteemember#programcommittee>;
		rr:objectMap [ rr:column "programcommittee"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Hasprogramcommitteemember#programcommitteemember>;
		rr:objectMap [ rr:column "programcommitteemember"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Hasprogramcommitteemember#ref-programcommittee>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap200>;
			rr:joinCondition [
				rr:child "programcommittee";
				rr:parent "id";
			];
		];
	].

<#TriplesMap204>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Hasprogramcommitteemember>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap205>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Hasprogramcommitteemember#programcommittee>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Hasprogramcommitteemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap206>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Hasprogramcommitteemember#programcommitteemember>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Hasprogramcommitteemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap207>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/ProgramcommitteeHasHasprogramcommitteemember>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Programcommittee> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Hasprogramcommitteemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/HasprogramcommitteememberhasProgramcommittee> ];
	].

<#TriplesMap208>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_38561.\"id\" FROM (\"programcommittee\" AS t_38561 JOIN \"hasprogramcommitteemember\" AS t_62027 ON ((t_38561.\"id\"=t_62027.\"programcommittee\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Programcommittee/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/ProgramcommitteeHasHasprogramcommitteemember>;
		rr:objectMap [ rr:template "http://example.com/Hasprogramcommitteemember/{id}" ];
	].

<#TriplesMap209>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/HasprogramcommitteememberhasProgramcommittee>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Hasprogramcommitteemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Programcommittee> ];
	].

<#TriplesMap210>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "subjectarea"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/subjectarea/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Subjectarea>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Subjectarea#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	].

<#TriplesMap211>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Subjectarea#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Subjectarea> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap212>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Subjectarea>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap213>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "hassubjectarea"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/hassubjectarea/{paper}/{subjectarea}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Hassubjectarea>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Hassubjectarea#paper>;
		rr:objectMap [ rr:column "paper"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Hassubjectarea#subjectarea>;
		rr:objectMap [ rr:column "subjectarea"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Hassubjectarea#ref-paper>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap10>;
			rr:joinCondition [
				rr:child "paper";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Hassubjectarea#ref-subjectarea>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap210>;
			rr:joinCondition [
				rr:child "subjectarea";
				rr:parent "id";
			];
		];
	].

<#TriplesMap214>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Hassubjectarea#paper>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Hassubjectarea> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap215>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Hassubjectarea#subjectarea>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Hassubjectarea> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap216>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Hassubjectarea>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap217>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/PaperHasSubjectarea>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Subjectarea> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/SubjectareahasPaper> ];
	].

<#TriplesMap218>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_00226.\"subjectarea\" AS subjectarea, t_00226.\"paper\" AS paper FROM (\"paper\" AS t_57182 JOIN \"hassubjectarea\" AS t_00226 ON ((t_57182.\"id\"=t_00226.\"paper\"))) JOIN \"subjectarea\" AS t_81012 ON ((t_81012.\"id\"=t_00226.\"subjectarea\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Paper/{paper}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/PaperHasSubjectarea>;
		rr:objectMap [ rr:template "http://example.com/Subjectarea/{subjectarea}" ];
	].

<#TriplesMap219>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/SubjectareahasPaper>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Subjectarea> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Paper> ];
	].

<#TriplesMap220>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Review>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap221>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "meta-review"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/meta-review/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Meta-review>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Meta-review#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Meta-review#ref-id>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap143>;
			rr:joinCondition [
				rr:child "id";
				rr:parent "id";
			];
		];
	].

<#TriplesMap222>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Meta-review>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap223>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Meta-review#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Meta-review> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap224>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/ReviewHasMeta-review>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Review> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Meta-review> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/Meta-reviewhasReview> ];
	].

<#TriplesMap225>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_53288.\"id\" FROM (\"review\" AS t_53288 JOIN \"meta-review\" AS t_43684 ON ((t_53288.\"id\"=t_43684.\"id\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Review/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/ReviewHasMeta-review>;
		rr:objectMap [ rr:template "http://example.com/Meta-review/{id}" ];
	].

<#TriplesMap226>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Meta-reviewhasReview>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Meta-review> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Review> ];
	].

<#TriplesMap227>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Reviewer>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap228>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "meta-reviewer"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/meta-reviewer/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Meta-reviewer>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Meta-reviewer#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Meta-reviewer#ref-id>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap30>;
			rr:joinCondition [
				rr:child "id";
				rr:parent "id";
			];
		];
	].

<#TriplesMap229>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Meta-reviewer>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap230>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Meta-reviewer#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Meta-reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap231>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/ReviewerHasMeta-reviewer>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Meta-reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/Meta-reviewerhasReviewer> ];
	].

<#TriplesMap232>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_41546.\"id\" FROM (\"reviewer\" AS t_41546 JOIN \"meta-reviewer\" AS t_11765 ON ((t_41546.\"id\"=t_11765.\"id\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Reviewer/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/ReviewerHasMeta-reviewer>;
		rr:objectMap [ rr:template "http://example.com/Meta-reviewer/{id}" ];
	].

<#TriplesMap233>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Meta-reviewerhasReviewer>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Meta-reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Reviewer> ];
	].

<#TriplesMap234>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/AdministratorHasAuthor>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Author> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/AuthorhasAdministrator> ];
	].

<#TriplesMap235>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_51331.\"hasauthor\" AS hasauthor, t_51331.\"acceptedby\" AS acceptedby, t_51331.\"rejectedby\" AS rejectedby FROM (\"administrator\" AS t_52991 JOIN \"paper\" AS t_51331 ON ((t_52991.\"id\"=t_51331.\"rejectedby\"))) JOIN \"author\" AS t_42965 ON ((t_42965.\"id\"=t_51331.\"acceptedby\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Administrator/{rejectedby}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/AdministratorHasAuthor>;
		rr:objectMap [ rr:template "http://example.com/Author/{hasauthor}" ];
	].

<#TriplesMap236>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/AuthorhasAdministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Author> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	].

<#TriplesMap237>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/AdministratorHasAuthor>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Author> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/AuthorhasAdministrator> ];
	].

<#TriplesMap238>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_27898.\"hasauthor\" AS hasauthor, t_27898.\"acceptedby\" AS acceptedby, t_27898.\"rejectedby\" AS rejectedby FROM (\"administrator\" AS t_22571 JOIN \"paper\" AS t_27898 ON ((t_22571.\"id\"=t_27898.\"rejectedby\"))) JOIN \"author\" AS t_38704 ON ((t_38704.\"id\"=t_27898.\"acceptedby\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Administrator/{rejectedby}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/AdministratorHasAuthor>;
		rr:objectMap [ rr:template "http://example.com/Author/{hasauthor}" ];
	].

<#TriplesMap239>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/AuthorhasAdministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Author> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	].

<#TriplesMap240>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/AdministratorHasDecision>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Decision> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/DecisionhasAdministrator> ];
	].

<#TriplesMap241>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_05128.\"hasdecision\" AS hasdecision, t_05128.\"acceptedby\" AS acceptedby, t_05128.\"rejectedby\" AS rejectedby FROM (\"administrator\" AS t_68163 JOIN \"paper\" AS t_05128 ON ((t_68163.\"id\"=t_05128.\"rejectedby\"))) JOIN \"decision\" AS t_99030 ON ((t_99030.\"id\"=t_05128.\"acceptedby\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Administrator/{rejectedby}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/AdministratorHasDecision>;
		rr:objectMap [ rr:template "http://example.com/Decision/{hasdecision}" ];
	].

<#TriplesMap242>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/DecisionhasAdministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Decision> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	].

<#TriplesMap243>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/AdministratorHasDecision>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Decision> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/DecisionhasAdministrator> ];
	].

<#TriplesMap244>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_35314.\"hasdecision\" AS hasdecision, t_35314.\"acceptedby\" AS acceptedby, t_35314.\"rejectedby\" AS rejectedby FROM (\"administrator\" AS t_48077 JOIN \"paper\" AS t_35314 ON ((t_48077.\"id\"=t_35314.\"rejectedby\"))) JOIN \"decision\" AS t_47780 ON ((t_47780.\"id\"=t_35314.\"acceptedby\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Administrator/{rejectedby}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/AdministratorHasDecision>;
		rr:objectMap [ rr:template "http://example.com/Decision/{hasdecision}" ];
	].

<#TriplesMap245>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/DecisionhasAdministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Decision> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	].

<#TriplesMap246>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/AuthorHasDecision>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Author> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Decision> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/DecisionhasAuthor> ];
	].

<#TriplesMap247>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_63663.\"hasdecision\" AS hasdecision, t_63663.\"hasauthor\" AS hasauthor FROM (\"author\" AS t_46364 JOIN \"paper\" AS t_63663 ON ((t_46364.\"id\"=t_63663.\"hasauthor\"))) JOIN \"decision\" AS t_94642 ON ((t_94642.\"id\"=t_63663.\"hasdecision\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Author/{hasauthor}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/AuthorHasDecision>;
		rr:objectMap [ rr:template "http://example.com/Decision/{hasdecision}" ];
	].

<#TriplesMap248>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/DecisionhasAuthor>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Decision> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Author> ];
	].

<#TriplesMap249>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/AdministratorHasDocument>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Document> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/DocumenthasAdministrator> ];
	].

<#TriplesMap250>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_49911.\"id\" AS id, t_49911.\"acceptedby\" AS acceptedby, t_49911.\"rejectedby\" AS rejectedby FROM (\"administrator\" AS t_89514 JOIN \"paper\" AS t_49911 ON ((t_89514.\"id\"=t_49911.\"rejectedby\"))) JOIN \"document\" AS t_82787 ON ((t_82787.\"id\"=t_49911.\"acceptedby\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Administrator/{rejectedby}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/AdministratorHasDocument>;
		rr:objectMap [ rr:template "http://example.com/Document/{id}" ];
	].

<#TriplesMap251>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/DocumenthasAdministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Document> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	].

<#TriplesMap252>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/AdministratorHasDocument>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Document> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/DocumenthasAdministrator> ];
	].

<#TriplesMap253>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_99633.\"id\" AS id, t_99633.\"acceptedby\" AS acceptedby, t_99633.\"rejectedby\" AS rejectedby FROM (\"administrator\" AS t_48019 JOIN \"paper\" AS t_99633 ON ((t_48019.\"id\"=t_99633.\"rejectedby\"))) JOIN \"document\" AS t_26910 ON ((t_26910.\"id\"=t_99633.\"acceptedby\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Administrator/{rejectedby}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/AdministratorHasDocument>;
		rr:objectMap [ rr:template "http://example.com/Document/{id}" ];
	].

<#TriplesMap254>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/DocumenthasAdministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Document> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	].

<#TriplesMap255>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/AuthorHasDocument>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Author> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Document> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/DocumenthasAuthor> ];
	].

<#TriplesMap256>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_31017.\"id\" AS id, t_31017.\"hasauthor\" AS hasauthor FROM (\"author\" AS t_94345 JOIN \"paper\" AS t_31017 ON ((t_94345.\"id\"=t_31017.\"hasauthor\"))) JOIN \"document\" AS t_35337 ON ((t_35337.\"id\"=t_31017.\"id\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Author/{hasauthor}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/AuthorHasDocument>;
		rr:objectMap [ rr:template "http://example.com/Document/{id}" ];
	].

<#TriplesMap257>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/DocumenthasAuthor>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Document> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Author> ];
	].

<#TriplesMap258>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/DecisionHasDocument>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Decision> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Document> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/DocumenthasDecision> ];
	].

<#TriplesMap259>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_24827.\"id\" AS id, t_24827.\"hasdecision\" AS hasdecision FROM (\"decision\" AS t_46439 JOIN \"paper\" AS t_24827 ON ((t_46439.\"id\"=t_24827.\"hasdecision\"))) JOIN \"document\" AS t_13576 ON ((t_13576.\"id\"=t_24827.\"id\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Decision/{hasdecision}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/DecisionHasDocument>;
		rr:objectMap [ rr:template "http://example.com/Document/{id}" ];
	].

<#TriplesMap260>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/DocumenthasDecision>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Document> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Decision> ];
	].

<#TriplesMap261>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/AdministratorHasMeta-reviewer>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Meta-reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/Meta-reviewerhasAdministrator> ];
	].

<#TriplesMap262>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_97996.\"readbymeta-reviewer\" AS readbymeta-reviewer, t_97996.\"acceptedby\" AS acceptedby, t_97996.\"rejectedby\" AS rejectedby FROM (\"administrator\" AS t_37495 JOIN \"paper\" AS t_97996 ON ((t_37495.\"id\"=t_97996.\"rejectedby\"))) JOIN \"meta-reviewer\" AS t_91389 ON ((t_91389.\"id\"=t_97996.\"acceptedby\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Administrator/{rejectedby}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/AdministratorHasMeta-reviewer>;
		rr:objectMap [ rr:template "http://example.com/Meta-reviewer/{readbymeta-reviewer}" ];
	].

<#TriplesMap263>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Meta-reviewerhasAdministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Meta-reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	].

<#TriplesMap264>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/AdministratorHasMeta-reviewer>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Meta-reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/Meta-reviewerhasAdministrator> ];
	].

<#TriplesMap265>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_61884.\"readbymeta-reviewer\" AS readbymeta-reviewer, t_61884.\"acceptedby\" AS acceptedby, t_61884.\"rejectedby\" AS rejectedby FROM (\"administrator\" AS t_26021 JOIN \"paper\" AS t_61884 ON ((t_26021.\"id\"=t_61884.\"rejectedby\"))) JOIN \"meta-reviewer\" AS t_81659 ON ((t_81659.\"id\"=t_61884.\"acceptedby\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Administrator/{rejectedby}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/AdministratorHasMeta-reviewer>;
		rr:objectMap [ rr:template "http://example.com/Meta-reviewer/{readbymeta-reviewer}" ];
	].

<#TriplesMap266>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Meta-reviewerhasAdministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Meta-reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	].

<#TriplesMap267>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/AuthorHasMeta-reviewer>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Author> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Meta-reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/Meta-reviewerhasAuthor> ];
	].

<#TriplesMap268>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_98858.\"readbymeta-reviewer\" AS readbymeta-reviewer, t_98858.\"hasauthor\" AS hasauthor FROM (\"author\" AS t_24405 JOIN \"paper\" AS t_98858 ON ((t_24405.\"id\"=t_98858.\"hasauthor\"))) JOIN \"meta-reviewer\" AS t_23753 ON ((t_23753.\"id\"=t_98858.\"readbymeta-reviewer\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Author/{hasauthor}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/AuthorHasMeta-reviewer>;
		rr:objectMap [ rr:template "http://example.com/Meta-reviewer/{readbymeta-reviewer}" ];
	].

<#TriplesMap269>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Meta-reviewerhasAuthor>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Meta-reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Author> ];
	].

<#TriplesMap270>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/DecisionHasMeta-reviewer>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Decision> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Meta-reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/Meta-reviewerhasDecision> ];
	].

<#TriplesMap271>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_05300.\"readbymeta-reviewer\" AS readbymeta-reviewer, t_05300.\"hasdecision\" AS hasdecision FROM (\"decision\" AS t_97794 JOIN \"paper\" AS t_05300 ON ((t_97794.\"id\"=t_05300.\"hasdecision\"))) JOIN \"meta-reviewer\" AS t_56462 ON ((t_56462.\"id\"=t_05300.\"readbymeta-reviewer\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Decision/{hasdecision}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/DecisionHasMeta-reviewer>;
		rr:objectMap [ rr:template "http://example.com/Meta-reviewer/{readbymeta-reviewer}" ];
	].

<#TriplesMap272>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Meta-reviewerhasDecision>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Meta-reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Decision> ];
	].

<#TriplesMap273>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/DocumentHasMeta-reviewer>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Document> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Meta-reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/Meta-reviewerhasDocument> ];
	].

<#TriplesMap274>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_02864.\"readbymeta-reviewer\" AS readbymeta-reviewer, t_02864.\"id\" AS id FROM (\"document\" AS t_85936 JOIN \"paper\" AS t_02864 ON ((t_85936.\"id\"=t_02864.\"id\"))) JOIN \"meta-reviewer\" AS t_90857 ON ((t_90857.\"id\"=t_02864.\"readbymeta-reviewer\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Document/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/DocumentHasMeta-reviewer>;
		rr:objectMap [ rr:template "http://example.com/Meta-reviewer/{readbymeta-reviewer}" ];
	].

<#TriplesMap275>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Meta-reviewerhasDocument>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Meta-reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Document> ];
	].

<#TriplesMap276>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Paper>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap277>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT t_31302.\"id\", t_87440.\"paperid\", t_87440.\"rejectedby\", t_87440.\"readbymeta-reviewer\", t_87440.\"hasauthor\", t_87440.\"title\", t_87440.\"hasdecision\", t_87440.\"acceptedby\" FROM \"paper\" AS t_87440 JOIN \"paperabstract\" AS t_31302 ON (t_87440.\"id\"=t_31302.\"id\")" 
	];

	rr:subjectMap [
		rr:template "http://example.com/paperabstract/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Paperabstract>;
	];

	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [ rr:constant <http://example.com/Paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Paperabstract#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Paperabstract#paperid>;
		rr:objectMap [ rr:column "paperid"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Paperabstract#rejectedby>;
		rr:objectMap [ rr:column "rejectedby"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Paperabstract#readbymeta-reviewer>;
		rr:objectMap [ rr:column "readbymeta-reviewer"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Paperabstract#hasauthor>;
		rr:objectMap [ rr:column "hasauthor"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Paperabstract#title>;
		rr:objectMap [ rr:column "title"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Paperabstract#hasdecision>;
		rr:objectMap [ rr:column "hasdecision"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Paperabstract#acceptedby>;
		rr:objectMap [ rr:column "acceptedby"; rr:datatype xsd:integer; ];
	].

<#TriplesMap278>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Paperabstract>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant <http://example.com/Paper> ];
	].

<#TriplesMap279>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Paperabstract#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Paperabstract> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap280>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/PaperHasPaperabstract>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Paperabstract> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/PaperabstracthasPaper> ];
	].

<#TriplesMap281>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_68619.\"id\" FROM (\"paper\" AS t_68619 JOIN \"paperabstract\" AS t_21188 ON ((t_68619.\"id\"=t_21188.\"id\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Paper/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/PaperHasPaperabstract>;
		rr:objectMap [ rr:template "http://example.com/Paperabstract/{id}" ];
	].

<#TriplesMap282>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/PaperabstracthasPaper>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Paperabstract> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Paper> ];
	].

<#TriplesMap283>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "paperassignmenttoolsrunby"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/paperassignmenttoolsrunby/{conference}/{administrator}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Paperassignmenttoolsrunby>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Paperassignmenttoolsrunby#conference>;
		rr:objectMap [ rr:column "conference"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Paperassignmenttoolsrunby#administrator>;
		rr:objectMap [ rr:column "administrator"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Paperassignmenttoolsrunby#ref-conference>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap117>;
			rr:joinCondition [
				rr:child "conference";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Paperassignmenttoolsrunby#ref-administrator>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap23>;
			rr:joinCondition [
				rr:child "administrator";
				rr:parent "id";
			];
		];
	].

<#TriplesMap284>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Paperassignmenttoolsrunby#conference>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Paperassignmenttoolsrunby> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap285>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Paperassignmenttoolsrunby#administrator>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Paperassignmenttoolsrunby> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap286>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Paperassignmenttoolsrunby>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap287>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/AdministratorHasConference>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/ConferencehasAdministrator> ];
	].

<#TriplesMap288>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_44707.\"conference\" AS conference, t_44707.\"administrator\" AS administrator FROM (\"administrator\" AS t_39719 JOIN \"paperassignmenttoolsrunby\" AS t_44707 ON ((t_39719.\"id\"=t_44707.\"administrator\"))) JOIN \"conference\" AS t_73809 ON ((t_73809.\"id\"=t_44707.\"conference\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Administrator/{administrator}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/AdministratorHasConference>;
		rr:objectMap [ rr:template "http://example.com/Conference/{conference}" ];
	].

<#TriplesMap289>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/ConferencehasAdministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	].

<#TriplesMap290>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Paper>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap291>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT t_99447.\"id\", t_17057.\"paperid\", t_17057.\"rejectedby\", t_17057.\"readbymeta-reviewer\", t_17057.\"hasauthor\", t_17057.\"title\", t_17057.\"hasdecision\", t_17057.\"acceptedby\" FROM \"paper\" AS t_17057 JOIN \"paperfullversion\" AS t_99447 ON (t_17057.\"id\"=t_99447.\"id\")" 
	];

	rr:subjectMap [
		rr:template "http://example.com/paperfullversion/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Paperfullversion>;
	];

	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [ rr:constant <http://example.com/Paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Paperfullversion#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Paperfullversion#paperid>;
		rr:objectMap [ rr:column "paperid"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Paperfullversion#rejectedby>;
		rr:objectMap [ rr:column "rejectedby"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Paperfullversion#readbymeta-reviewer>;
		rr:objectMap [ rr:column "readbymeta-reviewer"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Paperfullversion#hasauthor>;
		rr:objectMap [ rr:column "hasauthor"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Paperfullversion#title>;
		rr:objectMap [ rr:column "title"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Paperfullversion#hasdecision>;
		rr:objectMap [ rr:column "hasdecision"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Paperfullversion#acceptedby>;
		rr:objectMap [ rr:column "acceptedby"; rr:datatype xsd:integer; ];
	].

<#TriplesMap292>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Paperfullversion>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant <http://example.com/Paper> ];
	].

<#TriplesMap293>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Paperfullversion#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Paperfullversion> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap294>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/PaperHasPaperfullversion>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Paperfullversion> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/PaperfullversionhasPaper> ];
	].

<#TriplesMap295>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_75625.\"id\" FROM (\"paper\" AS t_75625 JOIN \"paperfullversion\" AS t_27562 ON ((t_75625.\"id\"=t_27562.\"id\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Paper/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/PaperHasPaperfullversion>;
		rr:objectMap [ rr:template "http://example.com/Paperfullversion/{id}" ];
	].

<#TriplesMap296>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/PaperfullversionhasPaper>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Paperfullversion> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Paper> ];
	].

<#TriplesMap297>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Chairman>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap298>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT t_44793.\"id\" FROM \"chairman\" AS t_56755 JOIN \"programcommitteechair\" AS t_44793 ON (t_56755.\"id\"=t_44793.\"id\")" 
	];

	rr:subjectMap [
		rr:template "http://example.com/programcommitteechair/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Programcommitteechair>;
	];

	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [ rr:constant <http://example.com/Chairman> ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Programcommitteechair#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	].

<#TriplesMap299>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Programcommitteechair>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant <http://example.com/Chairman> ];
	].

<#TriplesMap300>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/ChairmanHasProgramcommitteechair>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Chairman> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Programcommitteechair> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/ProgramcommitteechairhasChairman> ];
	].

<#TriplesMap301>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_17581.\"id\" FROM (\"chairman\" AS t_17581 JOIN \"programcommitteechair\" AS t_04488 ON ((t_17581.\"id\"=t_04488.\"id\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Chairman/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/ChairmanHasProgramcommitteechair>;
		rr:objectMap [ rr:template "http://example.com/Programcommitteechair/{id}" ];
	].

<#TriplesMap302>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/ProgramcommitteechairhasChairman>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Programcommitteechair> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Chairman> ];
	].

<#TriplesMap303>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "programcommitteemember"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/programcommitteemember/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Programcommitteemember>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Programcommitteemember#administrator>;
		rr:objectMap [ rr:template "http://example.com/administrator/{ID}" ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Programcommitteemember#maxpapers>;
		rr:objectMap [ rr:column "maxpapers"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Programcommitteemember#addedby>;
		rr:objectMap [ rr:column "addedby"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Programcommitteemember#ref-addedby>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap23>;
			rr:joinCondition [
				rr:child "addedby";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Programcommitteemember#ref-id>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap56>;
			rr:joinCondition [
				rr:child "id";
				rr:parent "id";
			];
		];
	].

<#TriplesMap304>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Programcommitteemember#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Programcommitteemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap305>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Programcommitteemember#maxpapers>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Programcommitteemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap306>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Programcommitteemember#addedby>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Programcommitteemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap307>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Programcommitteemember>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap308>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/AdministratorHasConferencemember>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Conferencemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/ConferencememberhasAdministrator> ];
	].

<#TriplesMap309>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_53977.\"id\" AS id, t_53977.\"addedby\" AS addedby FROM (\"administrator\" AS t_37045 JOIN \"programcommitteemember\" AS t_53977 ON ((t_37045.\"id\"=t_53977.\"addedby\"))) JOIN \"conferencemember\" AS t_62032 ON ((t_62032.\"id\"=t_53977.\"id\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Administrator/{addedby}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/AdministratorHasConferencemember>;
		rr:objectMap [ rr:template "http://example.com/Conferencemember/{id}" ];
	].

<#TriplesMap310>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/ConferencememberhasAdministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Conferencemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	].

<#TriplesMap311>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "readbyreviewer"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/readbyreviewer/{paper}/{reviewer}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Readbyreviewer>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Readbyreviewer#paper>;
		rr:objectMap [ rr:column "paper"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Readbyreviewer#reviewer>;
		rr:objectMap [ rr:column "reviewer"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Readbyreviewer#ref-paper>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap10>;
			rr:joinCondition [
				rr:child "paper";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Readbyreviewer#ref-reviewer>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap30>;
			rr:joinCondition [
				rr:child "reviewer";
				rr:parent "id";
			];
		];
	].

<#TriplesMap312>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Readbyreviewer#paper>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Readbyreviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap313>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Readbyreviewer#reviewer>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Readbyreviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap314>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Readbyreviewer>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap315>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/PaperHasReviewer>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/ReviewerhasPaper> ];
	].

<#TriplesMap316>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_77360.\"reviewer\" AS reviewer, t_77360.\"paper\" AS paper FROM (\"paper\" AS t_29521 JOIN \"readbyreviewer\" AS t_77360 ON ((t_29521.\"id\"=t_77360.\"paper\"))) JOIN \"reviewer\" AS t_13638 ON ((t_13638.\"id\"=t_77360.\"reviewer\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Paper/{paper}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/PaperHasReviewer>;
		rr:objectMap [ rr:template "http://example.com/Reviewer/{reviewer}" ];
	].

<#TriplesMap317>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/ReviewerhasPaper>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Paper> ];
	].

<#TriplesMap318>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Decision>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap319>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "rejection"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/rejection/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Rejection>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Rejection#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Rejection#ref-id>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap1>;
			rr:joinCondition [
				rr:child "id";
				rr:parent "id";
			];
		];
	].

<#TriplesMap320>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Rejection>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap321>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Rejection#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Rejection> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap322>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/DecisionHasRejection>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Decision> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Rejection> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/RejectionhasDecision> ];
	].

<#TriplesMap323>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_03290.\"id\" FROM (\"decision\" AS t_03290 JOIN \"rejection\" AS t_61375 ON ((t_03290.\"id\"=t_61375.\"id\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Decision/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/DecisionHasRejection>;
		rr:objectMap [ rr:template "http://example.com/Rejection/{id}" ];
	].

<#TriplesMap324>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/RejectionhasDecision>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Rejection> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Decision> ];
	].

<#TriplesMap325>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/DocumentHasReviewer>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Document> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/ReviewerhasDocument> ];
	].

<#TriplesMap326>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_77273.\"writtenby\" AS writtenby, t_77273.\"id\" AS id FROM (\"document\" AS t_90773 JOIN \"review\" AS t_77273 ON ((t_90773.\"id\"=t_77273.\"id\"))) JOIN \"reviewer\" AS t_19647 ON ((t_19647.\"id\"=t_77273.\"writtenby\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Document/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/DocumentHasReviewer>;
		rr:objectMap [ rr:template "http://example.com/Reviewer/{writtenby}" ];
	].

<#TriplesMap327>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/ReviewerhasDocument>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Document> ];
	].

<#TriplesMap328>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Conferencemember>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap329>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT t_11209.\"id\" FROM \"conferencemember\" AS t_94302 JOIN \"reviewer\" AS t_11209 ON (t_94302.\"id\"=t_11209.\"id\")" 
	];

	rr:subjectMap [
		rr:template "http://example.com/reviewer/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Reviewer>;
	];

	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [ rr:constant <http://example.com/Conferencemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Reviewer#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	].

<#TriplesMap330>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Reviewer>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant <http://example.com/Conferencemember> ];
	].

<#TriplesMap331>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/ConferencememberHasReviewer>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Conferencemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/ReviewerhasConferencemember> ];
	].

<#TriplesMap332>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_60398.\"id\" FROM (\"conferencemember\" AS t_60398 JOIN \"reviewer\" AS t_64110 ON ((t_60398.\"id\"=t_64110.\"id\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Conferencemember/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/ConferencememberHasReviewer>;
		rr:objectMap [ rr:template "http://example.com/Reviewer/{id}" ];
	].

<#TriplesMap333>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/ReviewerhasConferencemember>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Conferencemember> ];
	].

<#TriplesMap334>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "reviewerbiddingstartedby"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/reviewerbiddingstartedby/{conference}/{administrator}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Reviewerbiddingstartedby>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Reviewerbiddingstartedby#conference>;
		rr:objectMap [ rr:column "conference"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Reviewerbiddingstartedby#administrator>;
		rr:objectMap [ rr:column "administrator"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Reviewerbiddingstartedby#ref-administrator>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap23>;
			rr:joinCondition [
				rr:child "administrator";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Reviewerbiddingstartedby#ref-conference>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap117>;
			rr:joinCondition [
				rr:child "conference";
				rr:parent "id";
			];
		];
	].

<#TriplesMap335>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Reviewerbiddingstartedby#conference>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Reviewerbiddingstartedby> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap336>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Reviewerbiddingstartedby#administrator>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Reviewerbiddingstartedby> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap337>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Reviewerbiddingstartedby>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap338>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/AdministratorHasConference>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/ConferencehasAdministrator> ];
	].

<#TriplesMap339>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_79583.\"conference\" AS conference, t_79583.\"administrator\" AS administrator FROM (\"administrator\" AS t_01966 JOIN \"reviewerbiddingstartedby\" AS t_79583 ON ((t_01966.\"id\"=t_79583.\"administrator\"))) JOIN \"conference\" AS t_30286 ON ((t_30286.\"id\"=t_79583.\"conference\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Administrator/{administrator}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/AdministratorHasConference>;
		rr:objectMap [ rr:template "http://example.com/Conference/{conference}" ];
	].

<#TriplesMap340>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/ConferencehasAdministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	].

<#TriplesMap341>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Administrator>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap342>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "setmaxpapers"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/setmaxpapers/{administrator}/setmaxpapers/{programcommitteemember}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Setmaxpapers>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Setmaxpapers#administrator>;
		rr:objectMap [ rr:column "administrator"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Setmaxpapers#programcommitteemember>;
		rr:objectMap [ rr:column "programcommitteemember"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Setmaxpapers#ref-administrator>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap23>;
			rr:joinCondition [
				rr:child "administrator";
				rr:parent "id";
			];
		];
	].

<#TriplesMap343>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Setmaxpapers>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap344>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Setmaxpapers#administrator>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Setmaxpapers> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap345>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Setmaxpapers#programcommitteemember>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Setmaxpapers> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap346>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/AdministratorHasSetmaxpapers>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Setmaxpapers> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/SetmaxpapershasAdministrator> ];
	].

<#TriplesMap347>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_47408.\"id\" FROM (\"administrator\" AS t_47408 JOIN \"setmaxpapers\" AS t_37426 ON ((t_47408.\"id\"=t_37426.\"administrator\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Administrator/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/AdministratorHasSetmaxpapers>;
		rr:objectMap [ rr:template "http://example.com/Setmaxpapers/{id}" ];
	].

<#TriplesMap348>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/SetmaxpapershasAdministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Setmaxpapers> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Administrator> ];
	].

<#TriplesMap349>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "submitpaper"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/submitpaper/{author}/{paper}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Submitpaper>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Submitpaper#author>;
		rr:objectMap [ rr:column "author"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Submitpaper#paper>;
		rr:objectMap [ rr:column "paper"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Submitpaper#ref-author>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap59>;
			rr:joinCondition [
				rr:child "author";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Submitpaper#ref-paper>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap10>;
			rr:joinCondition [
				rr:child "paper";
				rr:parent "id";
			];
		];
	].

<#TriplesMap350>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Submitpaper#author>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Submitpaper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap351>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Submitpaper#paper>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Submitpaper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap352>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Submitpaper>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap353>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/AuthorHasPaper>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Author> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/PaperhasAuthor> ];
	].

<#TriplesMap354>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_01546.\"paper\" AS paper, t_01546.\"author\" AS author FROM (\"author\" AS t_55035 JOIN \"submitpaper\" AS t_01546 ON ((t_55035.\"id\"=t_01546.\"author\"))) JOIN \"paper\" AS t_06494 ON ((t_06494.\"id\"=t_01546.\"paper\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Author/{author}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/AuthorHasPaper>;
		rr:objectMap [ rr:template "http://example.com/Paper/{paper}" ];
	].

<#TriplesMap355>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/PaperhasAuthor>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Author> ];
	].

<#TriplesMap356>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Person>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap357>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT t_29296.\"id\", t_15513.\"name\", t_15513.\"email\" FROM \"person\" AS t_15513 JOIN \"user\" AS t_29296 ON (t_15513.\"id\"=t_29296.\"id\")" 
	];

	rr:subjectMap [
		rr:template "http://example.com/user/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/User>;
	];

	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [ rr:constant <http://example.com/Person> ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/User#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/User#name>;
		rr:objectMap [ rr:column "name"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/User#email>;
		rr:objectMap [ rr:column "email"; rr:datatype xsd:string; ];
	].

<#TriplesMap358>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/User>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant <http://example.com/Person> ];
	].

<#TriplesMap359>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/PersonHasUser>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Person> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/User> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/UserhasPerson> ];
	].

<#TriplesMap360>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_50415.\"id\" FROM (\"person\" AS t_50415 JOIN \"user\" AS t_34419 ON ((t_50415.\"id\"=t_34419.\"id\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Person/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/PersonHasUser>;
		rr:objectMap [ rr:template "http://example.com/User/{id}" ];
	].

<#TriplesMap361>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/UserhasPerson>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/User> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Person> ];
	].

<#TriplesMap362>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "markconflictofinterest"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/markconflictofinterest/{conferencemember}/{paper}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Markconflictofinterest>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Markconflictofinterest#conferencemember>;
		rr:objectMap [ rr:column "conferencemember"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Markconflictofinterest#paper>;
		rr:objectMap [ rr:column "paper"; rr:datatype xsd:integer; ];
	].

<#TriplesMap363>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Markconflictofinterest>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap364>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Markconflictofinterest#conferencemember>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Markconflictofinterest> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap365>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Markconflictofinterest#paper>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Markconflictofinterest> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap366>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "preference"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/preference/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Preference>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Preference#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	].

<#TriplesMap367>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Preference>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap368>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Preference#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Preference> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

