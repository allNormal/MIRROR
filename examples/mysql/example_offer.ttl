@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix foaf: <http://xmlns.com/foaf/0.1#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix dc: <http://purl.org/dc/elements/1.1#> .
@prefix dc: <http://purl.org/stuff/rev#> .
@prefix rev: <http://purl.org/stuff/rev#> .
@prefix bsbm: <http://www4.wiwiss.fu-berlin.de/bizer/bsbm/v01/vocabulary/> .
@prefix bsbm-inst: <http://www4.wiwiss.fu-berlin.de/bizer/bsbm/v01/vocabulary/> .
@prefix ex: <http://example.com/> .

@base <http://mappingpedia.org/rdb2rdf/r2rml/tc/> .

<#TriplesMap1>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "place"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/place/{placeid}";
		rr:termType rr:IRI;
		rr:class <http://example.com/place>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/place#placeid>;
		rr:objectMap [ rr:column "placeid"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/place#planename>;
		rr:objectMap [ rr:column "planename"; rr:datatype xsd:string; ];
	].

<#TriplesMap2>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/place#placeid>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/place> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap3>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/place#planename>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/place> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap4>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/place>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap5>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "product"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/product/{productid}";
		rr:termType rr:IRI;
		rr:class <http://example.com/product>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/product#productid>;
		rr:objectMap [ rr:column "productid"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/product#productname>;
		rr:objectMap [ rr:column "productname"; rr:datatype xsd:string; ];
	].

<#TriplesMap6>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/product#productid>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/product> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap7>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/product#productname>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/product> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap8>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/product>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap9>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "vendor"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/vendor/{vendorid}";
		rr:termType rr:IRI;
		rr:class <http://example.com/vendor>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/vendor#vendorid>;
		rr:objectMap [ rr:column "vendorid"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/vendor#vendorname>;
		rr:objectMap [ rr:column "vendorname"; rr:datatype xsd:string; ];
	].

<#TriplesMap10>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/vendor#vendorid>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/vendor> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap11>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/vendor#vendorname>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/vendor> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap12>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/vendor>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap13>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "offer1"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/offer1/{offerid}";
		rr:termType rr:IRI;
		rr:class <http://example.com/offer1>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/offer1#offerid>;
		rr:objectMap [ rr:column "offerid"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/offer1#idplace>;
		rr:objectMap [ rr:column "idplace"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/offer1#idproduct>;
		rr:objectMap [ rr:column "idproduct"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/offer1#idvendor>;
		rr:objectMap [ rr:column "idvendor"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/offer1#price>;
		rr:objectMap [ rr:column "price"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/offer1#ref-idplace>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap1>;
			rr:joinCondition [
				rr:child "idplace";
				rr:parent "placeid";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/offer1#ref-idproduct>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap5>;
			rr:joinCondition [
				rr:child "idproduct";
				rr:parent "productid";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/offer1#ref-idvendor>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap9>;
			rr:joinCondition [
				rr:child "idvendor";
				rr:parent "vendorid";
			];
		];
	].

<#TriplesMap14>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/offer1#offerid>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/offer1> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap15>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/offer1#idplace>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/offer1> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap16>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/offer1#idproduct>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/offer1> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap17>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/offer1#idvendor>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/offer1> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap18>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/offer1#price>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/offer1> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap19>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/offer1>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap20>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/placeHasproduct>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/place> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/product> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/productHasplace> ];
	].

<#TriplesMap21>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_25728.\"idproduct\" AS idproduct, t_25728.\"idplace\" AS idplace FROM (\"place\" AS t_70737 JOIN \"offer1\" AS t_25728 ON ((t_70737.\"placeid\"=t_25728.\"idplace\"))) JOIN \"product\" AS t_03748 ON ((t_03748.\"productid\"=t_25728.\"idproduct\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/place/{idplace}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/placeHasproduct>;
		rr:objectMap [ rr:template "http://example.com/product/{idproduct}" ];
	].

<#TriplesMap22>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/productHasplace>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/product> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/place> ];
	].

<#TriplesMap23>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/placeHasvendor>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/place> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/vendor> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/vendorHasplace> ];
	].

<#TriplesMap24>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_41543.\"idvendor\" AS idvendor, t_41543.\"idplace\" AS idplace FROM (\"place\" AS t_49587 JOIN \"offer1\" AS t_41543 ON ((t_49587.\"placeid\"=t_41543.\"idplace\"))) JOIN \"vendor\" AS t_65076 ON ((t_65076.\"vendorid\"=t_41543.\"idvendor\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/place/{idplace}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/placeHasvendor>;
		rr:objectMap [ rr:template "http://example.com/vendor/{idvendor}" ];
	].

<#TriplesMap25>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/vendorHasplace>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/vendor> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/place> ];
	].

<#TriplesMap26>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/productHasvendor>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/product> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/vendor> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/vendorHasproduct> ];
	].

<#TriplesMap27>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_51761.\"idvendor\" AS idvendor, t_51761.\"idproduct\" AS idproduct FROM (\"product\" AS t_05382 JOIN \"offer1\" AS t_51761 ON ((t_05382.\"productid\"=t_51761.\"idproduct\"))) JOIN \"vendor\" AS t_80701 ON ((t_80701.\"vendorid\"=t_51761.\"idvendor\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/product/{idproduct}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/productHasvendor>;
		rr:objectMap [ rr:template "http://example.com/vendor/{idvendor}" ];
	].

<#TriplesMap28>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/vendorHasproduct>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/vendor> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/product> ];
	].

<#TriplesMap29>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "offer2"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/offer2/{idplace}/{idproduct}/{idvendor}";
		rr:termType rr:IRI;
		rr:class <http://example.com/offer2>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/offer2#idplace>;
		rr:objectMap [ rr:column "idplace"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/offer2#idproduct>;
		rr:objectMap [ rr:column "idproduct"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/offer2#idvendor>;
		rr:objectMap [ rr:column "idvendor"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/offer2#price>;
		rr:objectMap [ rr:column "price"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/offer2#ref-idplace>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap1>;
			rr:joinCondition [
				rr:child "idplace";
				rr:parent "placeid";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/offer2#ref-idproduct>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap5>;
			rr:joinCondition [
				rr:child "idproduct";
				rr:parent "productid";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/offer2#ref-idvendor>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap9>;
			rr:joinCondition [
				rr:child "idvendor";
				rr:parent "vendorid";
			];
		];
	].

<#TriplesMap30>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/offer2#idplace>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/offer2> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap31>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/offer2#idproduct>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/offer2> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap32>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/offer2#idvendor>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/offer2> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap33>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/offer2#price>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/offer2> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap34>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/offer2>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap35>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/placeHasproduct>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/place> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/product> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/productHasplace> ];
	].

<#TriplesMap36>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_44015.\"idproduct\" AS idproduct, t_44015.\"idplace\" AS idplace FROM (\"place\" AS t_70902 JOIN \"offer2\" AS t_44015 ON ((t_70902.\"placeid\"=t_44015.\"idplace\"))) JOIN \"product\" AS t_56270 ON ((t_56270.\"productid\"=t_44015.\"idproduct\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/place/{idplace}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/placeHasproduct>;
		rr:objectMap [ rr:template "http://example.com/product/{idproduct}" ];
	].

<#TriplesMap37>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/productHasplace>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/product> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/place> ];
	].

<#TriplesMap38>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/placeHasvendor>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/place> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/vendor> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/vendorHasplace> ];
	].

<#TriplesMap39>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_40859.\"idvendor\" AS idvendor, t_40859.\"idplace\" AS idplace FROM (\"place\" AS t_83851 JOIN \"offer2\" AS t_40859 ON ((t_83851.\"placeid\"=t_40859.\"idplace\"))) JOIN \"vendor\" AS t_00120 ON ((t_00120.\"vendorid\"=t_40859.\"idvendor\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/place/{idplace}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/placeHasvendor>;
		rr:objectMap [ rr:template "http://example.com/vendor/{idvendor}" ];
	].

<#TriplesMap40>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/vendorHasplace>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/vendor> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/place> ];
	].

<#TriplesMap41>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/productHasvendor>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/product> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/vendor> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/vendorHasproduct> ];
	].

<#TriplesMap42>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_04135.\"idvendor\" AS idvendor, t_04135.\"idproduct\" AS idproduct FROM (\"product\" AS t_75772 JOIN \"offer2\" AS t_04135 ON ((t_75772.\"productid\"=t_04135.\"idproduct\"))) JOIN \"vendor\" AS t_56071 ON ((t_56071.\"vendorid\"=t_04135.\"idvendor\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/product/{idproduct}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/productHasvendor>;
		rr:objectMap [ rr:template "http://example.com/vendor/{idvendor}" ];
	].

<#TriplesMap43>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/vendorHasproduct>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/vendor> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/product> ];
	].

