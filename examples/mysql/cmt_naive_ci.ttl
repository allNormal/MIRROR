@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix foaf: <http://xmlns.com/foaf/0.1#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix dc: <http://purl.org/dc/elements/1.1#> .
@prefix dc: <http://purl.org/stuff/rev#> .
@prefix rev: <http://purl.org/stuff/rev#> .
@prefix bsbm: <http://www4.wiwiss.fu-berlin.de/bizer/bsbm/v01/vocabulary/> .
@prefix bsbm-inst: <http://www4.wiwiss.fu-berlin.de/bizer/bsbm/v01/vocabulary/> .
@prefix ex: <http://example.com/> .

@base <http://mappingpedia.org/rdb2rdf/r2rml/tc/> .

<#TriplesMap1>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "decision"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/decision/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/decision>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/decision#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	].

<#TriplesMap2>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/decision#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/decision> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap3>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/decision>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap4>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "acceptance"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/acceptance/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/acceptance>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/acceptance#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/acceptance#ref-id>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap1>;
			rr:joinCondition [
				rr:child "id";
				rr:parent "id";
			];
		];
	].

<#TriplesMap5>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/acceptance>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap6>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/acceptance#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/acceptance> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap7>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/decisionHasacceptance>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/decision> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/acceptance> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/acceptanceHasdecision> ];
	].

<#TriplesMap8>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_80424.\"id\" FROM (\"decision\" AS t_80424 JOIN \"acceptance\" AS t_99913 ON ((t_80424.\"id\"=t_99913.\"id\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/decision/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/decisionHasacceptance>;
		rr:objectMap [ rr:template "http://example.com/acceptance/{id}" ];
	].

<#TriplesMap9>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/acceptanceHasdecision>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/acceptance> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/decision> ];
	].

<#TriplesMap10>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "paper"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/paper/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/paper>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paper#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paper#paperid>;
		rr:objectMap [ rr:column "paperid"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paper#rejectedby>;
		rr:objectMap [ rr:column "rejectedby"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paper#readbymeta-reviewer>;
		rr:objectMap [ rr:column "readbymeta-reviewer"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paper#hasauthor>;
		rr:objectMap [ rr:column "hasauthor"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paper#title>;
		rr:objectMap [ rr:column "title"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paper#hasdecision>;
		rr:objectMap [ rr:column "hasdecision"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paper#acceptedby>;
		rr:objectMap [ rr:column "acceptedby"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paper#ref-acceptedby>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap23>;
			rr:joinCondition [
				rr:child "acceptedby";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paper#ref-hasauthor>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap59>;
			rr:joinCondition [
				rr:child "hasauthor";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paper#ref-hasdecision>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap1>;
			rr:joinCondition [
				rr:child "hasdecision";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paper#ref-readbymeta-reviewer>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap225>;
			rr:joinCondition [
				rr:child "readbymeta-reviewer";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paper#ref-rejectedby>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap23>;
			rr:joinCondition [
				rr:child "rejectedby";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paper#ref-id>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap189>;
			rr:joinCondition [
				rr:child "id";
				rr:parent "id";
			];
		];
	].

<#TriplesMap11>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/paper#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap12>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/paper#paperid>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap13>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/paper#rejectedby>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap14>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/paper#readbymeta-reviewer>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap15>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/paper#hasauthor>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap16>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/paper#title>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap17>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/paper#hasdecision>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap18>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/paper#acceptedby>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap19>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/paper>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap20>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "user"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/user/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/user>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/user#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	].

<#TriplesMap21>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/user#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/user> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap22>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/user>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap23>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "administrator"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/administrator/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/administrator>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/administrator#paper>;
		rr:objectMap [ rr:template "http://example.com/paper/{ID}" ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/administrator#acceptpaper>;
		rr:objectMap [ rr:column "acceptpaper"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/administrator#ref-acceptpaper>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap10>;
			rr:joinCondition [
				rr:child "acceptpaper";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/administrator#ref-id>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap20>;
			rr:joinCondition [
				rr:child "id";
				rr:parent "id";
			];
		];
	].

<#TriplesMap24>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/administrator#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap25>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/administrator#acceptpaper>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap26>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/administrator>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap27>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/paperHasuser>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/user> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/userHaspaper> ];
	].

<#TriplesMap28>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_98294.\"id\" AS id, t_98294.\"acceptpaper\" AS acceptpaper FROM (\"paper\" AS t_40999 JOIN \"administrator\" AS t_98294 ON ((t_40999.\"id\"=t_98294.\"acceptpaper\"))) JOIN \"user\" AS t_01215 ON ((t_01215.\"id\"=t_98294.\"id\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/paper/{acceptpaper}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paperHasuser>;
		rr:objectMap [ rr:template "http://example.com/user/{id}" ];
	].

<#TriplesMap29>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/userHaspaper>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/user> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/paper> ];
	].

<#TriplesMap30>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "reviewer"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/reviewer/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/reviewer>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/reviewer#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	].

<#TriplesMap31>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/reviewer#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap32>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/reviewer>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap33>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "assignedto"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/assignedto/{paper}/{reviewer}";
		rr:termType rr:IRI;
		rr:class <http://example.com/assignedto>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/assignedto#paper>;
		rr:objectMap [ rr:column "paper"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/assignedto#reviewer>;
		rr:objectMap [ rr:column "reviewer"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/assignedto#ref-paper>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap10>;
			rr:joinCondition [
				rr:child "paper";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/assignedto#ref-reviewer>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap30>;
			rr:joinCondition [
				rr:child "reviewer";
				rr:parent "id";
			];
		];
	].

<#TriplesMap34>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/assignedto#paper>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/assignedto> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap35>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/assignedto#reviewer>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/assignedto> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap36>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/assignedto>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap37>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/paperHasreviewer>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/reviewerHaspaper> ];
	].

<#TriplesMap38>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_69094.\"reviewer\" AS reviewer, t_69094.\"paper\" AS paper FROM (\"paper\" AS t_58680 JOIN \"assignedto\" AS t_69094 ON ((t_58680.\"id\"=t_69094.\"paper\"))) JOIN \"reviewer\" AS t_82890 ON ((t_82890.\"id\"=t_69094.\"reviewer\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/paper/{paper}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paperHasreviewer>;
		rr:objectMap [ rr:template "http://example.com/reviewer/{reviewer}" ];
	].

<#TriplesMap39>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/reviewerHaspaper>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/paper> ];
	].

<#TriplesMap40>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "assignreviewer"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/assignreviewer/{administrator}/{reviewer}";
		rr:termType rr:IRI;
		rr:class <http://example.com/assignreviewer>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/assignreviewer#administrator>;
		rr:objectMap [ rr:column "administrator"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/assignreviewer#reviewer>;
		rr:objectMap [ rr:column "reviewer"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/assignreviewer#ref-administrator>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap23>;
			rr:joinCondition [
				rr:child "administrator";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/assignreviewer#ref-reviewer>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap30>;
			rr:joinCondition [
				rr:child "reviewer";
				rr:parent "id";
			];
		];
	].

<#TriplesMap41>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/assignreviewer#administrator>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/assignreviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap42>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/assignreviewer#reviewer>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/assignreviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap43>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/assignreviewer>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap44>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/administratorHasreviewer>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/reviewerHasadministrator> ];
	].

<#TriplesMap45>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_68341.\"reviewer\" AS reviewer, t_68341.\"administrator\" AS administrator FROM (\"administrator\" AS t_06909 JOIN \"assignreviewer\" AS t_68341 ON ((t_06909.\"id\"=t_68341.\"administrator\"))) JOIN \"reviewer\" AS t_98448 ON ((t_98448.\"id\"=t_68341.\"reviewer\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/administrator/{administrator}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/administratorHasreviewer>;
		rr:objectMap [ rr:template "http://example.com/reviewer/{reviewer}" ];
	].

<#TriplesMap46>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/reviewerHasadministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	].

<#TriplesMap47>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "chairman"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/chairman/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/chairman>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/chairman#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	].

<#TriplesMap48>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/chairman#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/chairman> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap49>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/chairman>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap50>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "associatedchair"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/associatedchair/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/associatedchair>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/associatedchair#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/associatedchair#ref-id>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap47>;
			rr:joinCondition [
				rr:child "id";
				rr:parent "id";
			];
		];
	].

<#TriplesMap51>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/associatedchair>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap52>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/associatedchair#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/associatedchair> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap53>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/chairmanHasassociatedchair>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/chairman> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/associatedchair> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/associatedchairHaschairman> ];
	].

<#TriplesMap54>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_79489.\"id\" FROM (\"chairman\" AS t_79489 JOIN \"associatedchair\" AS t_51678 ON ((t_79489.\"id\"=t_51678.\"id\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/chairman/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/chairmanHasassociatedchair>;
		rr:objectMap [ rr:template "http://example.com/associatedchair/{id}" ];
	].

<#TriplesMap55>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/associatedchairHaschairman>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/associatedchair> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/chairman> ];
	].

<#TriplesMap56>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "conferencemember"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/conferencemember/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/conferencemember>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/conferencemember#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	].

<#TriplesMap57>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/conferencemember#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/conferencemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap58>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/conferencemember>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap59>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT t_88304.\"id\" FROM \"conferencemember\" AS t_52344 JOIN \"author\" AS t_88304 ON (t_52344.\"id\"=t_88304.\"id\")" 
	];

	rr:subjectMap [
		rr:template "http://example.com/author/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/author>;
	];

	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [ rr:constant <http://example.com/conferencemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/author#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	].

<#TriplesMap60>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/author>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant <http://example.com/conferencemember> ];
	].

<#TriplesMap61>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/author#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/author> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap62>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/conferencememberHasauthor>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/conferencemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/author> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/authorHasconferencemember> ];
	].

<#TriplesMap63>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_58033.\"id\" FROM (\"conferencemember\" AS t_58033 JOIN \"author\" AS t_99079 ON ((t_58033.\"id\"=t_99079.\"id\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/conferencemember/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/conferencememberHasauthor>;
		rr:objectMap [ rr:template "http://example.com/author/{id}" ];
	].

<#TriplesMap64>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/authorHasconferencemember>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/author> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/conferencemember> ];
	].

<#TriplesMap65>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/author>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap66>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "authornotreviewer"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/authornotreviewer/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/authornotreviewer>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/authornotreviewer#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/authornotreviewer#ref-id>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap59>;
			rr:joinCondition [
				rr:child "id";
				rr:parent "id";
			];
		];
	].

<#TriplesMap67>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/authornotreviewer>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap68>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/authornotreviewer#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/authornotreviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap69>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/authorHasauthornotreviewer>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/author> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/authornotreviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/authornotreviewerHasauthor> ];
	].

<#TriplesMap70>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_28365.\"id\" FROM (\"author\" AS t_28365 JOIN \"authornotreviewer\" AS t_11304 ON ((t_28365.\"id\"=t_11304.\"id\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/author/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/authorHasauthornotreviewer>;
		rr:objectMap [ rr:template "http://example.com/authornotreviewer/{id}" ];
	].

<#TriplesMap71>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/authornotreviewerHasauthor>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/authornotreviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/author> ];
	].

<#TriplesMap72>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "bid"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/bid/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/bid>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/bid#paper>;
		rr:objectMap [ rr:template "http://example.com/paper/{ID}" ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/bid#adjustedby>;
		rr:objectMap [ rr:column "adjustedby"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/bid#hasbid_inv>;
		rr:objectMap [ rr:column "hasbid_inv"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/bid#ref-adjustedby>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap30>;
			rr:joinCondition [
				rr:child "adjustedby";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/bid#ref-hasbid_inv>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap10>;
			rr:joinCondition [
				rr:child "hasbid_inv";
				rr:parent "id";
			];
		];
	].

<#TriplesMap73>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/bid#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/bid> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap74>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/bid#adjustedby>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/bid> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap75>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/bid#hasbid_inv>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/bid> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap76>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/bid>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap77>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/paperHasreviewer>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/reviewerHaspaper> ];
	].

<#TriplesMap78>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_78945.\"adjustedby\" AS adjustedby, t_78945.\"hasbid_inv\" AS hasbid_inv FROM (\"paper\" AS t_73544 JOIN \"bid\" AS t_78945 ON ((t_73544.\"id\"=t_78945.\"hasbid_inv\"))) JOIN \"reviewer\" AS t_08043 ON ((t_08043.\"id\"=t_78945.\"adjustedby\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/paper/{hasbid_inv}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paperHasreviewer>;
		rr:objectMap [ rr:template "http://example.com/reviewer/{adjustedby}" ];
	].

<#TriplesMap79>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/reviewerHaspaper>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/paper> ];
	].

<#TriplesMap80>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/conferencemember>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap81>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT t_93154.\"id\" FROM \"conferencemember\" AS t_27625 JOIN \"chairman\" AS t_93154 ON (t_27625.\"id\"=t_93154.\"id\")" 
	];

	rr:subjectMap [
		rr:template "http://example.com/chairman/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/chairman>;
	];

	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [ rr:constant <http://example.com/conferencemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/chairman#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	].

<#TriplesMap82>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/chairman>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant <http://example.com/conferencemember> ];
	].

<#TriplesMap83>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/conferencememberHaschairman>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/conferencemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/chairman> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/chairmanHasconferencemember> ];
	].

<#TriplesMap84>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_71348.\"id\" FROM (\"conferencemember\" AS t_71348 JOIN \"chairman\" AS t_62028 ON ((t_71348.\"id\"=t_62028.\"id\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/conferencemember/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/conferencememberHaschairman>;
		rr:objectMap [ rr:template "http://example.com/chairman/{id}" ];
	].

<#TriplesMap85>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/chairmanHasconferencemember>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/chairman> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/conferencemember> ];
	].

<#TriplesMap86>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/author>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap87>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT t_59054.\"id\" FROM \"author\" AS t_47559 JOIN \"co-author\" AS t_59054 ON (t_47559.\"id\"=t_59054.\"id\")" 
	];

	rr:subjectMap [
		rr:template "http://example.com/co-author/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/co-author>;
	];

	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [ rr:constant <http://example.com/author> ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/co-author#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	].

<#TriplesMap88>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/co-author>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant <http://example.com/author> ];
	].

<#TriplesMap89>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/co-author#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/co-author> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap90>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/authorHasco-author>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/author> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/co-author> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/co-authorHasauthor> ];
	].

<#TriplesMap91>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_60576.\"id\" FROM (\"author\" AS t_60576 JOIN \"co-author\" AS t_31751 ON ((t_60576.\"id\"=t_31751.\"id\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/author/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/authorHasco-author>;
		rr:objectMap [ rr:template "http://example.com/co-author/{id}" ];
	].

<#TriplesMap92>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/co-authorHasauthor>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/co-author> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/author> ];
	].

<#TriplesMap93>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "co-writepaper"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/co-writepaper/{co-author}/{paper}";
		rr:termType rr:IRI;
		rr:class <http://example.com/co-writepaper>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/co-writepaper#co-author>;
		rr:objectMap [ rr:column "co-author"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/co-writepaper#paper>;
		rr:objectMap [ rr:column "paper"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/co-writepaper#ref-co-author>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap87>;
			rr:joinCondition [
				rr:child "co-author";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/co-writepaper#ref-paper>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap10>;
			rr:joinCondition [
				rr:child "paper";
				rr:parent "id";
			];
		];
	].

<#TriplesMap94>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/co-writepaper#co-author>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/co-writepaper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap95>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/co-writepaper#paper>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/co-writepaper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap96>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/co-writepaper>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap97>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/co-authorHaspaper>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/co-author> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/paperHasco-author> ];
	].

<#TriplesMap98>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_84739.\"paper\" AS paper, t_84739.\"co-author\" AS co-author FROM (\"co-author\" AS t_85726 JOIN \"co-writepaper\" AS t_84739 ON ((t_85726.\"id\"=t_84739.\"co-author\"))) JOIN \"paper\" AS t_78531 ON ((t_78531.\"id\"=t_84739.\"paper\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/co-author/{co-author}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/co-authorHaspaper>;
		rr:objectMap [ rr:template "http://example.com/paper/{paper}" ];
	].

<#TriplesMap99>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/paperHasco-author>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/co-author> ];
	].

<#TriplesMap100>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/chairman>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap101>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "conferencechair"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/conferencechair/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/conferencechair>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/conferencechair#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/conferencechair#ref-id>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap47>;
			rr:joinCondition [
				rr:child "id";
				rr:parent "id";
			];
		];
	].

<#TriplesMap102>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/conferencechair>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap103>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/conferencechair#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/conferencechair> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap104>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/chairmanHasconferencechair>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/chairman> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/conferencechair> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/conferencechairHaschairman> ];
	].

<#TriplesMap105>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_54188.\"id\" FROM (\"chairman\" AS t_54188 JOIN \"conferencechair\" AS t_59450 ON ((t_54188.\"id\"=t_59450.\"id\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/chairman/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/chairmanHasconferencechair>;
		rr:objectMap [ rr:template "http://example.com/conferencechair/{id}" ];
	].

<#TriplesMap106>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/conferencechairHaschairman>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/conferencechair> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/chairman> ];
	].

<#TriplesMap107>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "person"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/person/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/person>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/person#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/person#name>;
		rr:objectMap [ rr:column "name"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/person#email>;
		rr:objectMap [ rr:column "email"; rr:datatype xsd:string; ];
	].

<#TriplesMap108>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/person#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/person> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap109>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/person#name>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/person> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap110>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/person#email>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/person> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap111>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/person>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap112>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT t_95962.\"id\", t_07545.\"name\", t_07545.\"email\" FROM \"person\" AS t_07545 JOIN \"conferencemember\" AS t_95962 ON (t_07545.\"id\"=t_95962.\"id\")" 
	];

	rr:subjectMap [
		rr:template "http://example.com/conferencemember/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/conferencemember>;
	];

	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [ rr:constant <http://example.com/person> ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/conferencemember#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/conferencemember#name>;
		rr:objectMap [ rr:column "name"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/conferencemember#email>;
		rr:objectMap [ rr:column "email"; rr:datatype xsd:string; ];
	].

<#TriplesMap113>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/conferencemember>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant <http://example.com/person> ];
	].

<#TriplesMap114>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/personHasconferencemember>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/person> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/conferencemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/conferencememberHasperson> ];
	].

<#TriplesMap115>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_17222.\"id\" FROM (\"person\" AS t_17222 JOIN \"conferencemember\" AS t_88818 ON ((t_17222.\"id\"=t_88818.\"id\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/person/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/personHasconferencemember>;
		rr:objectMap [ rr:template "http://example.com/conferencemember/{id}" ];
	].

<#TriplesMap116>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/conferencememberHasperson>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/conferencemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/person> ];
	].

<#TriplesMap117>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "conference"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/conference/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/conference>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/conference#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/conference#siteurl>;
		rr:objectMap [ rr:column "siteurl"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/conference#acceptshardcopysubmissions>;
		rr:objectMap [ rr:column "acceptshardcopysubmissions"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/conference#logourl>;
		rr:objectMap [ rr:column "logourl"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/conference#date>;
		rr:objectMap [ rr:column "date"; rr:datatype xsd:date; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/conference#name>;
		rr:objectMap [ rr:column "name"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/conference#reviewsperpaper>;
		rr:objectMap [ rr:column "reviewsperpaper"; rr:datatype xsd:integer; ];
	].

<#TriplesMap118>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/conference#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap119>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/conference#siteurl>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap120>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/conference#acceptshardcopysubmissions>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap121>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/conference#logourl>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap122>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/conference#date>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:date ];
	].

<#TriplesMap123>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/conference#name>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap124>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/conference#reviewsperpaper>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap125>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/conference>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap126>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "detailsenteredby"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/detailsenteredby/{conference}/{administrator}";
		rr:termType rr:IRI;
		rr:class <http://example.com/detailsenteredby>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/detailsenteredby#conference>;
		rr:objectMap [ rr:column "conference"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/detailsenteredby#administrator>;
		rr:objectMap [ rr:column "administrator"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/detailsenteredby#ref-administrator>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap23>;
			rr:joinCondition [
				rr:child "administrator";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/detailsenteredby#ref-conference>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap117>;
			rr:joinCondition [
				rr:child "conference";
				rr:parent "id";
			];
		];
	].

<#TriplesMap127>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/detailsenteredby#conference>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/detailsenteredby> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap128>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/detailsenteredby#administrator>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/detailsenteredby> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap129>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/detailsenteredby>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap130>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/administratorHasconference>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/conferenceHasadministrator> ];
	].

<#TriplesMap131>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_62137.\"conference\" AS conference, t_62137.\"administrator\" AS administrator FROM (\"administrator\" AS t_47463 JOIN \"detailsenteredby\" AS t_62137 ON ((t_47463.\"id\"=t_62137.\"administrator\"))) JOIN \"conference\" AS t_48050 ON ((t_48050.\"id\"=t_62137.\"conference\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/administrator/{administrator}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/administratorHasconference>;
		rr:objectMap [ rr:template "http://example.com/conference/{conference}" ];
	].

<#TriplesMap132>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/conferenceHasadministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	].

<#TriplesMap133>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "enablevirtualmeeting"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/enablevirtualmeeting/{administrator}/{conference}";
		rr:termType rr:IRI;
		rr:class <http://example.com/enablevirtualmeeting>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/enablevirtualmeeting#administrator>;
		rr:objectMap [ rr:column "administrator"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/enablevirtualmeeting#conference>;
		rr:objectMap [ rr:column "conference"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/enablevirtualmeeting#ref-administrator>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap23>;
			rr:joinCondition [
				rr:child "administrator";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/enablevirtualmeeting#ref-conference>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap117>;
			rr:joinCondition [
				rr:child "conference";
				rr:parent "id";
			];
		];
	].

<#TriplesMap134>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/enablevirtualmeeting#administrator>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/enablevirtualmeeting> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap135>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/enablevirtualmeeting#conference>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/enablevirtualmeeting> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap136>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/enablevirtualmeeting>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap137>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/administratorHasconference>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/conferenceHasadministrator> ];
	].

<#TriplesMap138>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_58902.\"conference\" AS conference, t_58902.\"administrator\" AS administrator FROM (\"administrator\" AS t_37805 JOIN \"enablevirtualmeeting\" AS t_58902 ON ((t_37805.\"id\"=t_58902.\"administrator\"))) JOIN \"conference\" AS t_47086 ON ((t_47086.\"id\"=t_58902.\"conference\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/administrator/{administrator}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/administratorHasconference>;
		rr:objectMap [ rr:template "http://example.com/conference/{conference}" ];
	].

<#TriplesMap139>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/conferenceHasadministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	].

<#TriplesMap140>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "programcommitteechair"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/programcommitteechair/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/programcommitteechair>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/programcommitteechair#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	].

<#TriplesMap141>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/programcommitteechair#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/programcommitteechair> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap142>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/programcommitteechair>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap143>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "review"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/review/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/review>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/review#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/review#writtenby>;
		rr:objectMap [ rr:column "writtenby"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/review#ref-id>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap189>;
			rr:joinCondition [
				rr:child "id";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/review#ref-writtenby>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap30>;
			rr:joinCondition [
				rr:child "writtenby";
				rr:parent "id";
			];
		];
	].

<#TriplesMap144>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/review#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/review> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap145>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/review#writtenby>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/review> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap146>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "endreview"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/endreview/{programcommitteechair}/{review}";
		rr:termType rr:IRI;
		rr:class <http://example.com/endreview>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/endreview#programcommitteechair>;
		rr:objectMap [ rr:column "programcommitteechair"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/endreview#review>;
		rr:objectMap [ rr:column "review"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/endreview#ref-programcommitteechair>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap140>;
			rr:joinCondition [
				rr:child "programcommitteechair";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/endreview#ref-review>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap143>;
			rr:joinCondition [
				rr:child "review";
				rr:parent "id";
			];
		];
	].

<#TriplesMap147>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/endreview#programcommitteechair>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/endreview> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap148>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/endreview#review>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/endreview> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap149>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/endreview>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap150>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/programcommitteechairHasreview>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/programcommitteechair> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/review> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/reviewHasprogramcommitteechair> ];
	].

<#TriplesMap151>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_70222.\"review\" AS review, t_70222.\"programcommitteechair\" AS programcommitteechair FROM (\"programcommitteechair\" AS t_14797 JOIN \"endreview\" AS t_70222 ON ((t_14797.\"id\"=t_70222.\"programcommitteechair\"))) JOIN \"review\" AS t_27153 ON ((t_27153.\"id\"=t_70222.\"review\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/programcommitteechair/{programcommitteechair}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/programcommitteechairHasreview>;
		rr:objectMap [ rr:template "http://example.com/review/{review}" ];
	].

<#TriplesMap152>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/reviewHasprogramcommitteechair>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/review> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/programcommitteechair> ];
	].

<#TriplesMap153>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "enterreviewcriteria"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/enterreviewcriteria/{administrator}/{conference}";
		rr:termType rr:IRI;
		rr:class <http://example.com/enterreviewcriteria>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/enterreviewcriteria#administrator>;
		rr:objectMap [ rr:column "administrator"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/enterreviewcriteria#conference>;
		rr:objectMap [ rr:column "conference"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/enterreviewcriteria#ref-administrator>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap23>;
			rr:joinCondition [
				rr:child "administrator";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/enterreviewcriteria#ref-conference>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap117>;
			rr:joinCondition [
				rr:child "conference";
				rr:parent "id";
			];
		];
	].

<#TriplesMap154>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/enterreviewcriteria#administrator>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/enterreviewcriteria> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap155>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/enterreviewcriteria#conference>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/enterreviewcriteria> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap156>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/enterreviewcriteria>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap157>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/administratorHasconference>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/conferenceHasadministrator> ];
	].

<#TriplesMap158>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_64734.\"conference\" AS conference, t_64734.\"administrator\" AS administrator FROM (\"administrator\" AS t_28294 JOIN \"enterreviewcriteria\" AS t_64734 ON ((t_28294.\"id\"=t_64734.\"administrator\"))) JOIN \"conference\" AS t_64460 ON ((t_64460.\"id\"=t_64734.\"conference\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/administrator/{administrator}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/administratorHasconference>;
		rr:objectMap [ rr:template "http://example.com/conference/{conference}" ];
	].

<#TriplesMap159>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/conferenceHasadministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	].

<#TriplesMap160>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "externalreviewer"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/externalreviewer/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/externalreviewer>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/externalreviewer#person>;
		rr:objectMap [ rr:template "http://example.com/person/{ID}" ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/externalreviewer#assignedbyreviewer>;
		rr:objectMap [ rr:column "assignedbyreviewer"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/externalreviewer#ref-assignedbyreviewer>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap30>;
			rr:joinCondition [
				rr:child "assignedbyreviewer";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/externalreviewer#ref-id>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap107>;
			rr:joinCondition [
				rr:child "id";
				rr:parent "id";
			];
		];
	].

<#TriplesMap161>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/externalreviewer#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/externalreviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap162>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/externalreviewer#assignedbyreviewer>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/externalreviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap163>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/externalreviewer>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap164>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/personHasreviewer>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/person> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/reviewerHasperson> ];
	].

<#TriplesMap165>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_91979.\"assignedbyreviewer\" AS assignedbyreviewer, t_91979.\"id\" AS id FROM (\"person\" AS t_96238 JOIN \"externalreviewer\" AS t_91979 ON ((t_96238.\"id\"=t_91979.\"id\"))) JOIN \"reviewer\" AS t_22135 ON ((t_22135.\"id\"=t_91979.\"assignedbyreviewer\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/person/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/personHasreviewer>;
		rr:objectMap [ rr:template "http://example.com/reviewer/{assignedbyreviewer}" ];
	].

<#TriplesMap166>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/reviewerHasperson>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/person> ];
	].

<#TriplesMap167>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "finalizepaperassignment"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/finalizepaperassignment/{administrator}/{conference}";
		rr:termType rr:IRI;
		rr:class <http://example.com/finalizepaperassignment>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/finalizepaperassignment#administrator>;
		rr:objectMap [ rr:column "administrator"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/finalizepaperassignment#conference>;
		rr:objectMap [ rr:column "conference"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/finalizepaperassignment#ref-administrator>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap23>;
			rr:joinCondition [
				rr:child "administrator";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/finalizepaperassignment#ref-conference>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap117>;
			rr:joinCondition [
				rr:child "conference";
				rr:parent "id";
			];
		];
	].

<#TriplesMap168>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/finalizepaperassignment#administrator>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/finalizepaperassignment> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap169>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/finalizepaperassignment#conference>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/finalizepaperassignment> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap170>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/finalizepaperassignment>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap171>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/administratorHasconference>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/conferenceHasadministrator> ];
	].

<#TriplesMap172>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_16407.\"conference\" AS conference, t_16407.\"administrator\" AS administrator FROM (\"administrator\" AS t_19876 JOIN \"finalizepaperassignment\" AS t_16407 ON ((t_19876.\"id\"=t_16407.\"administrator\"))) JOIN \"conference\" AS t_38667 ON ((t_38667.\"id\"=t_16407.\"conference\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/administrator/{administrator}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/administratorHasconference>;
		rr:objectMap [ rr:template "http://example.com/conference/{conference}" ];
	].

<#TriplesMap173>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/conferenceHasadministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	].

<#TriplesMap174>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "hardcopymailingmanifestsp"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/hardcopymailingmanifestsp/{conference}/{administrator}";
		rr:termType rr:IRI;
		rr:class <http://example.com/hardcopymailingmanifestsp>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/hardcopymailingmanifestsp#conference>;
		rr:objectMap [ rr:column "conference"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/hardcopymailingmanifestsp#administrator>;
		rr:objectMap [ rr:column "administrator"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/hardcopymailingmanifestsp#ref-conference>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap117>;
			rr:joinCondition [
				rr:child "conference";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/hardcopymailingmanifestsp#ref-administrator>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap23>;
			rr:joinCondition [
				rr:child "administrator";
				rr:parent "id";
			];
		];
	].

<#TriplesMap175>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/hardcopymailingmanifestsp#conference>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/hardcopymailingmanifestsp> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap176>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/hardcopymailingmanifestsp#administrator>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/hardcopymailingmanifestsp> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap177>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/hardcopymailingmanifestsp>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap178>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/administratorHasconference>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/conferenceHasadministrator> ];
	].

<#TriplesMap179>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_09596.\"conference\" AS conference, t_09596.\"administrator\" AS administrator FROM (\"administrator\" AS t_44484 JOIN \"hardcopymailingmanifestsp\" AS t_09596 ON ((t_44484.\"id\"=t_09596.\"administrator\"))) JOIN \"conference\" AS t_29945 ON ((t_29945.\"id\"=t_09596.\"conference\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/administrator/{administrator}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/administratorHasconference>;
		rr:objectMap [ rr:template "http://example.com/conference/{conference}" ];
	].

<#TriplesMap180>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/conferenceHasadministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	].

<#TriplesMap181>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/conference>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap182>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "hasconferencemember"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/hasconferencemember/{conference}/hasconferencemember/{conferencemember}";
		rr:termType rr:IRI;
		rr:class <http://example.com/hasconferencemember>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/hasconferencemember#conference>;
		rr:objectMap [ rr:column "conference"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/hasconferencemember#conferencemember>;
		rr:objectMap [ rr:column "conferencemember"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/hasconferencemember#ref-conference>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap117>;
			rr:joinCondition [
				rr:child "conference";
				rr:parent "id";
			];
		];
	].

<#TriplesMap183>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/hasconferencemember>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap184>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/hasconferencemember#conference>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/hasconferencemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap185>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/hasconferencemember#conferencemember>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/hasconferencemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap186>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/conferenceHashasconferencemember>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/hasconferencemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/hasconferencememberHasconference> ];
	].

<#TriplesMap187>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_18708.\"id\" FROM (\"conference\" AS t_18708 JOIN \"hasconferencemember\" AS t_53826 ON ((t_18708.\"id\"=t_53826.\"conference\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/conference/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/conferenceHashasconferencemember>;
		rr:objectMap [ rr:template "http://example.com/hasconferencemember/{id}" ];
	].

<#TriplesMap188>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/hasconferencememberHasconference>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/hasconferencemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/conference> ];
	].

<#TriplesMap189>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "document"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/document/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/document>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/document#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	].

<#TriplesMap190>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/document#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/document> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap191>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/document>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap192>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "hasconflictofinterest"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/hasconflictofinterest/{person}/{document}";
		rr:termType rr:IRI;
		rr:class <http://example.com/hasconflictofinterest>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/hasconflictofinterest#person>;
		rr:objectMap [ rr:column "person"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/hasconflictofinterest#document>;
		rr:objectMap [ rr:column "document"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/hasconflictofinterest#ref-document>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap189>;
			rr:joinCondition [
				rr:child "document";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/hasconflictofinterest#ref-person>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap107>;
			rr:joinCondition [
				rr:child "person";
				rr:parent "id";
			];
		];
	].

<#TriplesMap193>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/hasconflictofinterest#person>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/hasconflictofinterest> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap194>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/hasconflictofinterest#document>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/hasconflictofinterest> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap195>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/hasconflictofinterest>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap196>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/documentHasperson>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/document> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/person> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/personHasdocument> ];
	].

<#TriplesMap197>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_47700.\"person\" AS person, t_47700.\"document\" AS document FROM (\"document\" AS t_24078 JOIN \"hasconflictofinterest\" AS t_47700 ON ((t_24078.\"id\"=t_47700.\"document\"))) JOIN \"person\" AS t_78066 ON ((t_78066.\"id\"=t_47700.\"person\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/document/{document}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/documentHasperson>;
		rr:objectMap [ rr:template "http://example.com/person/{person}" ];
	].

<#TriplesMap198>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/personHasdocument>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/person> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/document> ];
	].

<#TriplesMap199>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "programcommittee"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/programcommittee/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/programcommittee>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/programcommittee#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	].

<#TriplesMap200>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/programcommittee#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/programcommittee> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap201>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/programcommittee>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap202>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "hasprogramcommitteemember"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/hasprogramcommitteemember/{programcommittee}/hasprogramcommitteemember/{programcommitteemember}";
		rr:termType rr:IRI;
		rr:class <http://example.com/hasprogramcommitteemember>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/hasprogramcommitteemember#programcommittee>;
		rr:objectMap [ rr:column "programcommittee"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/hasprogramcommitteemember#programcommitteemember>;
		rr:objectMap [ rr:column "programcommitteemember"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/hasprogramcommitteemember#ref-programcommittee>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap199>;
			rr:joinCondition [
				rr:child "programcommittee";
				rr:parent "id";
			];
		];
	].

<#TriplesMap203>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/hasprogramcommitteemember>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap204>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/hasprogramcommitteemember#programcommittee>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/hasprogramcommitteemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap205>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/hasprogramcommitteemember#programcommitteemember>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/hasprogramcommitteemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap206>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/programcommitteeHashasprogramcommitteemember>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/programcommittee> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/hasprogramcommitteemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/hasprogramcommitteememberHasprogramcommittee> ];
	].

<#TriplesMap207>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_83448.\"id\" FROM (\"programcommittee\" AS t_83448 JOIN \"hasprogramcommitteemember\" AS t_92670 ON ((t_83448.\"id\"=t_92670.\"programcommittee\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/programcommittee/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/programcommitteeHashasprogramcommitteemember>;
		rr:objectMap [ rr:template "http://example.com/hasprogramcommitteemember/{id}" ];
	].

<#TriplesMap208>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/hasprogramcommitteememberHasprogramcommittee>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/hasprogramcommitteemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/programcommittee> ];
	].

<#TriplesMap209>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "subjectarea"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/subjectarea/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/subjectarea>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/subjectarea#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	].

<#TriplesMap210>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/subjectarea#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/subjectarea> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap211>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/subjectarea>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap212>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "hassubjectarea"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/hassubjectarea/{paper}/{subjectarea}";
		rr:termType rr:IRI;
		rr:class <http://example.com/hassubjectarea>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/hassubjectarea#paper>;
		rr:objectMap [ rr:column "paper"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/hassubjectarea#subjectarea>;
		rr:objectMap [ rr:column "subjectarea"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/hassubjectarea#ref-paper>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap10>;
			rr:joinCondition [
				rr:child "paper";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/hassubjectarea#ref-subjectarea>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap209>;
			rr:joinCondition [
				rr:child "subjectarea";
				rr:parent "id";
			];
		];
	].

<#TriplesMap213>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/hassubjectarea#paper>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/hassubjectarea> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap214>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/hassubjectarea#subjectarea>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/hassubjectarea> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap215>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/hassubjectarea>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap216>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/paperHassubjectarea>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/subjectarea> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/subjectareaHaspaper> ];
	].

<#TriplesMap217>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_14219.\"subjectarea\" AS subjectarea, t_14219.\"paper\" AS paper FROM (\"paper\" AS t_23110 JOIN \"hassubjectarea\" AS t_14219 ON ((t_23110.\"id\"=t_14219.\"paper\"))) JOIN \"subjectarea\" AS t_74447 ON ((t_74447.\"id\"=t_14219.\"subjectarea\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/paper/{paper}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paperHassubjectarea>;
		rr:objectMap [ rr:template "http://example.com/subjectarea/{subjectarea}" ];
	].

<#TriplesMap218>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/subjectareaHaspaper>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/subjectarea> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/paper> ];
	].

<#TriplesMap219>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "meta-review"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/meta-review/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/meta-review>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/meta-review#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/meta-review#ref-id>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap143>;
			rr:joinCondition [
				rr:child "id";
				rr:parent "id";
			];
		];
	].

<#TriplesMap220>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/meta-review>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap221>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/meta-review#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/meta-review> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap222>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/reviewHasmeta-review>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/review> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/meta-review> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/meta-reviewHasreview> ];
	].

<#TriplesMap223>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_69009.\"id\" FROM (\"review\" AS t_69009 JOIN \"meta-review\" AS t_67485 ON ((t_69009.\"id\"=t_67485.\"id\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/review/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/reviewHasmeta-review>;
		rr:objectMap [ rr:template "http://example.com/meta-review/{id}" ];
	].

<#TriplesMap224>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/meta-reviewHasreview>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/meta-review> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/review> ];
	].

<#TriplesMap225>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "meta-reviewer"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/meta-reviewer/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/meta-reviewer>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/meta-reviewer#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/meta-reviewer#ref-id>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap30>;
			rr:joinCondition [
				rr:child "id";
				rr:parent "id";
			];
		];
	].

<#TriplesMap226>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/meta-reviewer>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap227>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/meta-reviewer#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/meta-reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap228>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/reviewerHasmeta-reviewer>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/meta-reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/meta-reviewerHasreviewer> ];
	].

<#TriplesMap229>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_33608.\"id\" FROM (\"reviewer\" AS t_33608 JOIN \"meta-reviewer\" AS t_26342 ON ((t_33608.\"id\"=t_26342.\"id\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/reviewer/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/reviewerHasmeta-reviewer>;
		rr:objectMap [ rr:template "http://example.com/meta-reviewer/{id}" ];
	].

<#TriplesMap230>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/meta-reviewerHasreviewer>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/meta-reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/reviewer> ];
	].

<#TriplesMap231>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/administratorHasauthor>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/author> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/authorHasadministrator> ];
	].

<#TriplesMap232>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_43139.\"hasauthor\" AS hasauthor, t_43139.\"rejectedby\" AS rejectedby, t_43139.\"acceptedby\" AS acceptedby FROM (\"administrator\" AS t_26823 JOIN \"paper\" AS t_43139 ON ((t_26823.\"id\"=t_43139.\"acceptedby\"))) JOIN \"author\" AS t_38436 ON ((t_38436.\"id\"=t_43139.\"rejectedby\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/administrator/{acceptedby}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/administratorHasauthor>;
		rr:objectMap [ rr:template "http://example.com/author/{hasauthor}" ];
	].

<#TriplesMap233>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/authorHasadministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/author> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	].

<#TriplesMap234>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/administratorHasauthor>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/author> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/authorHasadministrator> ];
	].

<#TriplesMap235>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_96884.\"hasauthor\" AS hasauthor, t_96884.\"rejectedby\" AS rejectedby, t_96884.\"acceptedby\" AS acceptedby FROM (\"administrator\" AS t_16452 JOIN \"paper\" AS t_96884 ON ((t_16452.\"id\"=t_96884.\"acceptedby\"))) JOIN \"author\" AS t_81177 ON ((t_81177.\"id\"=t_96884.\"rejectedby\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/administrator/{acceptedby}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/administratorHasauthor>;
		rr:objectMap [ rr:template "http://example.com/author/{hasauthor}" ];
	].

<#TriplesMap236>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/authorHasadministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/author> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	].

<#TriplesMap237>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/administratorHasdecision>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/decision> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/decisionHasadministrator> ];
	].

<#TriplesMap238>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_37802.\"hasdecision\" AS hasdecision, t_37802.\"rejectedby\" AS rejectedby, t_37802.\"acceptedby\" AS acceptedby FROM (\"administrator\" AS t_11538 JOIN \"paper\" AS t_37802 ON ((t_11538.\"id\"=t_37802.\"acceptedby\"))) JOIN \"decision\" AS t_69022 ON ((t_69022.\"id\"=t_37802.\"rejectedby\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/administrator/{acceptedby}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/administratorHasdecision>;
		rr:objectMap [ rr:template "http://example.com/decision/{hasdecision}" ];
	].

<#TriplesMap239>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/decisionHasadministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/decision> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	].

<#TriplesMap240>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/administratorHasdecision>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/decision> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/decisionHasadministrator> ];
	].

<#TriplesMap241>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_64377.\"hasdecision\" AS hasdecision, t_64377.\"rejectedby\" AS rejectedby, t_64377.\"acceptedby\" AS acceptedby FROM (\"administrator\" AS t_20375 JOIN \"paper\" AS t_64377 ON ((t_20375.\"id\"=t_64377.\"acceptedby\"))) JOIN \"decision\" AS t_64167 ON ((t_64167.\"id\"=t_64377.\"rejectedby\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/administrator/{acceptedby}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/administratorHasdecision>;
		rr:objectMap [ rr:template "http://example.com/decision/{hasdecision}" ];
	].

<#TriplesMap242>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/decisionHasadministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/decision> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	].

<#TriplesMap243>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/authorHasdecision>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/author> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/decision> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/decisionHasauthor> ];
	].

<#TriplesMap244>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_13647.\"hasdecision\" AS hasdecision, t_13647.\"hasauthor\" AS hasauthor FROM (\"author\" AS t_78783 JOIN \"paper\" AS t_13647 ON ((t_78783.\"id\"=t_13647.\"hasauthor\"))) JOIN \"decision\" AS t_26823 ON ((t_26823.\"id\"=t_13647.\"hasdecision\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/author/{hasauthor}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/authorHasdecision>;
		rr:objectMap [ rr:template "http://example.com/decision/{hasdecision}" ];
	].

<#TriplesMap245>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/decisionHasauthor>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/decision> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/author> ];
	].

<#TriplesMap246>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/administratorHasdocument>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/document> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/documentHasadministrator> ];
	].

<#TriplesMap247>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_74915.\"id\" AS id, t_74915.\"rejectedby\" AS rejectedby, t_74915.\"acceptedby\" AS acceptedby FROM (\"administrator\" AS t_24966 JOIN \"paper\" AS t_74915 ON ((t_24966.\"id\"=t_74915.\"acceptedby\"))) JOIN \"document\" AS t_70505 ON ((t_70505.\"id\"=t_74915.\"rejectedby\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/administrator/{acceptedby}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/administratorHasdocument>;
		rr:objectMap [ rr:template "http://example.com/document/{id}" ];
	].

<#TriplesMap248>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/documentHasadministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/document> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	].

<#TriplesMap249>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/administratorHasdocument>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/document> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/documentHasadministrator> ];
	].

<#TriplesMap250>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_47907.\"id\" AS id, t_47907.\"rejectedby\" AS rejectedby, t_47907.\"acceptedby\" AS acceptedby FROM (\"administrator\" AS t_53447 JOIN \"paper\" AS t_47907 ON ((t_53447.\"id\"=t_47907.\"acceptedby\"))) JOIN \"document\" AS t_46959 ON ((t_46959.\"id\"=t_47907.\"rejectedby\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/administrator/{acceptedby}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/administratorHasdocument>;
		rr:objectMap [ rr:template "http://example.com/document/{id}" ];
	].

<#TriplesMap251>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/documentHasadministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/document> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	].

<#TriplesMap252>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/authorHasdocument>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/author> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/document> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/documentHasauthor> ];
	].

<#TriplesMap253>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_01405.\"id\" AS id, t_01405.\"hasauthor\" AS hasauthor FROM (\"author\" AS t_36621 JOIN \"paper\" AS t_01405 ON ((t_36621.\"id\"=t_01405.\"hasauthor\"))) JOIN \"document\" AS t_56134 ON ((t_56134.\"id\"=t_01405.\"id\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/author/{hasauthor}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/authorHasdocument>;
		rr:objectMap [ rr:template "http://example.com/document/{id}" ];
	].

<#TriplesMap254>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/documentHasauthor>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/document> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/author> ];
	].

<#TriplesMap255>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/decisionHasdocument>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/decision> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/document> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/documentHasdecision> ];
	].

<#TriplesMap256>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_28917.\"id\" AS id, t_28917.\"hasdecision\" AS hasdecision FROM (\"decision\" AS t_06616 JOIN \"paper\" AS t_28917 ON ((t_06616.\"id\"=t_28917.\"hasdecision\"))) JOIN \"document\" AS t_51912 ON ((t_51912.\"id\"=t_28917.\"id\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/decision/{hasdecision}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/decisionHasdocument>;
		rr:objectMap [ rr:template "http://example.com/document/{id}" ];
	].

<#TriplesMap257>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/documentHasdecision>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/document> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/decision> ];
	].

<#TriplesMap258>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/administratorHasmeta-reviewer>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/meta-reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/meta-reviewerHasadministrator> ];
	].

<#TriplesMap259>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_19061.\"readbymeta-reviewer\" AS readbymeta-reviewer, t_19061.\"rejectedby\" AS rejectedby, t_19061.\"acceptedby\" AS acceptedby FROM (\"administrator\" AS t_01981 JOIN \"paper\" AS t_19061 ON ((t_01981.\"id\"=t_19061.\"acceptedby\"))) JOIN \"meta-reviewer\" AS t_43003 ON ((t_43003.\"id\"=t_19061.\"rejectedby\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/administrator/{acceptedby}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/administratorHasmeta-reviewer>;
		rr:objectMap [ rr:template "http://example.com/meta-reviewer/{readbymeta-reviewer}" ];
	].

<#TriplesMap260>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/meta-reviewerHasadministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/meta-reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	].

<#TriplesMap261>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/administratorHasmeta-reviewer>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/meta-reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/meta-reviewerHasadministrator> ];
	].

<#TriplesMap262>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_11509.\"readbymeta-reviewer\" AS readbymeta-reviewer, t_11509.\"rejectedby\" AS rejectedby, t_11509.\"acceptedby\" AS acceptedby FROM (\"administrator\" AS t_64031 JOIN \"paper\" AS t_11509 ON ((t_64031.\"id\"=t_11509.\"acceptedby\"))) JOIN \"meta-reviewer\" AS t_15089 ON ((t_15089.\"id\"=t_11509.\"rejectedby\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/administrator/{acceptedby}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/administratorHasmeta-reviewer>;
		rr:objectMap [ rr:template "http://example.com/meta-reviewer/{readbymeta-reviewer}" ];
	].

<#TriplesMap263>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/meta-reviewerHasadministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/meta-reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	].

<#TriplesMap264>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/authorHasmeta-reviewer>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/author> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/meta-reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/meta-reviewerHasauthor> ];
	].

<#TriplesMap265>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_18422.\"readbymeta-reviewer\" AS readbymeta-reviewer, t_18422.\"hasauthor\" AS hasauthor FROM (\"author\" AS t_98960 JOIN \"paper\" AS t_18422 ON ((t_98960.\"id\"=t_18422.\"hasauthor\"))) JOIN \"meta-reviewer\" AS t_81998 ON ((t_81998.\"id\"=t_18422.\"readbymeta-reviewer\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/author/{hasauthor}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/authorHasmeta-reviewer>;
		rr:objectMap [ rr:template "http://example.com/meta-reviewer/{readbymeta-reviewer}" ];
	].

<#TriplesMap266>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/meta-reviewerHasauthor>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/meta-reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/author> ];
	].

<#TriplesMap267>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/decisionHasmeta-reviewer>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/decision> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/meta-reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/meta-reviewerHasdecision> ];
	].

<#TriplesMap268>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_10424.\"readbymeta-reviewer\" AS readbymeta-reviewer, t_10424.\"hasdecision\" AS hasdecision FROM (\"decision\" AS t_29122 JOIN \"paper\" AS t_10424 ON ((t_29122.\"id\"=t_10424.\"hasdecision\"))) JOIN \"meta-reviewer\" AS t_04417 ON ((t_04417.\"id\"=t_10424.\"readbymeta-reviewer\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/decision/{hasdecision}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/decisionHasmeta-reviewer>;
		rr:objectMap [ rr:template "http://example.com/meta-reviewer/{readbymeta-reviewer}" ];
	].

<#TriplesMap269>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/meta-reviewerHasdecision>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/meta-reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/decision> ];
	].

<#TriplesMap270>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/documentHasmeta-reviewer>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/document> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/meta-reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/meta-reviewerHasdocument> ];
	].

<#TriplesMap271>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_20736.\"readbymeta-reviewer\" AS readbymeta-reviewer, t_20736.\"id\" AS id FROM (\"document\" AS t_01718 JOIN \"paper\" AS t_20736 ON ((t_01718.\"id\"=t_20736.\"id\"))) JOIN \"meta-reviewer\" AS t_32380 ON ((t_32380.\"id\"=t_20736.\"readbymeta-reviewer\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/document/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/documentHasmeta-reviewer>;
		rr:objectMap [ rr:template "http://example.com/meta-reviewer/{readbymeta-reviewer}" ];
	].

<#TriplesMap272>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/meta-reviewerHasdocument>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/meta-reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/document> ];
	].

<#TriplesMap273>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT t_07962.\"id\", t_68106.\"paperid\", t_68106.\"rejectedby\", t_68106.\"readbymeta-reviewer\", t_68106.\"hasauthor\", t_68106.\"title\", t_68106.\"hasdecision\", t_68106.\"acceptedby\" FROM \"paper\" AS t_68106 JOIN \"paperabstract\" AS t_07962 ON (t_68106.\"id\"=t_07962.\"id\")" 
	];

	rr:subjectMap [
		rr:template "http://example.com/paperabstract/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/paperabstract>;
	];

	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [ rr:constant <http://example.com/paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paperabstract#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paperabstract#paperid>;
		rr:objectMap [ rr:column "paperid"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paperabstract#rejectedby>;
		rr:objectMap [ rr:column "rejectedby"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paperabstract#readbymeta-reviewer>;
		rr:objectMap [ rr:column "readbymeta-reviewer"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paperabstract#hasauthor>;
		rr:objectMap [ rr:column "hasauthor"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paperabstract#title>;
		rr:objectMap [ rr:column "title"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paperabstract#hasdecision>;
		rr:objectMap [ rr:column "hasdecision"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paperabstract#acceptedby>;
		rr:objectMap [ rr:column "acceptedby"; rr:datatype xsd:integer; ];
	].

<#TriplesMap274>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/paperabstract>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant <http://example.com/paper> ];
	].

<#TriplesMap275>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/paperabstract#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/paperabstract> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap276>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/paperHaspaperabstract>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/paperabstract> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/paperabstractHaspaper> ];
	].

<#TriplesMap277>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_52227.\"id\" FROM (\"paper\" AS t_52227 JOIN \"paperabstract\" AS t_32869 ON ((t_52227.\"id\"=t_32869.\"id\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/paper/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paperHaspaperabstract>;
		rr:objectMap [ rr:template "http://example.com/paperabstract/{id}" ];
	].

<#TriplesMap278>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/paperabstractHaspaper>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/paperabstract> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/paper> ];
	].

<#TriplesMap279>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "paperassignmenttoolsrunby"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/paperassignmenttoolsrunby/{conference}/{administrator}";
		rr:termType rr:IRI;
		rr:class <http://example.com/paperassignmenttoolsrunby>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paperassignmenttoolsrunby#conference>;
		rr:objectMap [ rr:column "conference"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paperassignmenttoolsrunby#administrator>;
		rr:objectMap [ rr:column "administrator"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paperassignmenttoolsrunby#ref-conference>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap117>;
			rr:joinCondition [
				rr:child "conference";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paperassignmenttoolsrunby#ref-administrator>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap23>;
			rr:joinCondition [
				rr:child "administrator";
				rr:parent "id";
			];
		];
	].

<#TriplesMap280>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/paperassignmenttoolsrunby#conference>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/paperassignmenttoolsrunby> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap281>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/paperassignmenttoolsrunby#administrator>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/paperassignmenttoolsrunby> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap282>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/paperassignmenttoolsrunby>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap283>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/administratorHasconference>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/conferenceHasadministrator> ];
	].

<#TriplesMap284>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_46963.\"conference\" AS conference, t_46963.\"administrator\" AS administrator FROM (\"administrator\" AS t_50741 JOIN \"paperassignmenttoolsrunby\" AS t_46963 ON ((t_50741.\"id\"=t_46963.\"administrator\"))) JOIN \"conference\" AS t_60564 ON ((t_60564.\"id\"=t_46963.\"conference\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/administrator/{administrator}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/administratorHasconference>;
		rr:objectMap [ rr:template "http://example.com/conference/{conference}" ];
	].

<#TriplesMap285>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/conferenceHasadministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	].

<#TriplesMap286>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT t_37726.\"id\", t_52256.\"paperid\", t_52256.\"rejectedby\", t_52256.\"readbymeta-reviewer\", t_52256.\"hasauthor\", t_52256.\"title\", t_52256.\"hasdecision\", t_52256.\"acceptedby\" FROM \"paper\" AS t_52256 JOIN \"paperfullversion\" AS t_37726 ON (t_52256.\"id\"=t_37726.\"id\")" 
	];

	rr:subjectMap [
		rr:template "http://example.com/paperfullversion/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/paperfullversion>;
	];

	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [ rr:constant <http://example.com/paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paperfullversion#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paperfullversion#paperid>;
		rr:objectMap [ rr:column "paperid"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paperfullversion#rejectedby>;
		rr:objectMap [ rr:column "rejectedby"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paperfullversion#readbymeta-reviewer>;
		rr:objectMap [ rr:column "readbymeta-reviewer"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paperfullversion#hasauthor>;
		rr:objectMap [ rr:column "hasauthor"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paperfullversion#title>;
		rr:objectMap [ rr:column "title"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paperfullversion#hasdecision>;
		rr:objectMap [ rr:column "hasdecision"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paperfullversion#acceptedby>;
		rr:objectMap [ rr:column "acceptedby"; rr:datatype xsd:integer; ];
	].

<#TriplesMap287>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/paperfullversion>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant <http://example.com/paper> ];
	].

<#TriplesMap288>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/paperfullversion#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/paperfullversion> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap289>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/paperHaspaperfullversion>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/paperfullversion> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/paperfullversionHaspaper> ];
	].

<#TriplesMap290>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_62289.\"id\" FROM (\"paper\" AS t_62289 JOIN \"paperfullversion\" AS t_17878 ON ((t_62289.\"id\"=t_17878.\"id\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/paper/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paperHaspaperfullversion>;
		rr:objectMap [ rr:template "http://example.com/paperfullversion/{id}" ];
	].

<#TriplesMap291>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/paperfullversionHaspaper>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/paperfullversion> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/paper> ];
	].

<#TriplesMap292>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/chairman>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap293>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT t_82915.\"id\" FROM \"chairman\" AS t_39322 JOIN \"programcommitteechair\" AS t_82915 ON (t_39322.\"id\"=t_82915.\"id\")" 
	];

	rr:subjectMap [
		rr:template "http://example.com/programcommitteechair/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/programcommitteechair>;
	];

	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [ rr:constant <http://example.com/chairman> ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/programcommitteechair#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	].

<#TriplesMap294>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/programcommitteechair>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant <http://example.com/chairman> ];
	].

<#TriplesMap295>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/chairmanHasprogramcommitteechair>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/chairman> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/programcommitteechair> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/programcommitteechairHaschairman> ];
	].

<#TriplesMap296>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_20565.\"id\" FROM (\"chairman\" AS t_20565 JOIN \"programcommitteechair\" AS t_37321 ON ((t_20565.\"id\"=t_37321.\"id\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/chairman/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/chairmanHasprogramcommitteechair>;
		rr:objectMap [ rr:template "http://example.com/programcommitteechair/{id}" ];
	].

<#TriplesMap297>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/programcommitteechairHaschairman>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/programcommitteechair> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/chairman> ];
	].

<#TriplesMap298>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "programcommitteemember"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/programcommitteemember/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/programcommitteemember>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/programcommitteemember#administrator>;
		rr:objectMap [ rr:template "http://example.com/administrator/{ID}" ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/programcommitteemember#maxpapers>;
		rr:objectMap [ rr:column "maxpapers"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/programcommitteemember#addedby>;
		rr:objectMap [ rr:column "addedby"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/programcommitteemember#ref-addedby>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap23>;
			rr:joinCondition [
				rr:child "addedby";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/programcommitteemember#ref-id>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap56>;
			rr:joinCondition [
				rr:child "id";
				rr:parent "id";
			];
		];
	].

<#TriplesMap299>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/programcommitteemember#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/programcommitteemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap300>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/programcommitteemember#maxpapers>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/programcommitteemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap301>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/programcommitteemember#addedby>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/programcommitteemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap302>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/administratorHasconferencemember>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/conferencemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/conferencememberHasadministrator> ];
	].

<#TriplesMap303>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_06744.\"id\" AS id, t_06744.\"addedby\" AS addedby FROM (\"administrator\" AS t_90171 JOIN \"programcommitteemember\" AS t_06744 ON ((t_90171.\"id\"=t_06744.\"addedby\"))) JOIN \"conferencemember\" AS t_01455 ON ((t_01455.\"id\"=t_06744.\"id\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/administrator/{addedby}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/administratorHasconferencemember>;
		rr:objectMap [ rr:template "http://example.com/conferencemember/{id}" ];
	].

<#TriplesMap304>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/conferencememberHasadministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/conferencemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	].

<#TriplesMap305>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "readbyreviewer"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/readbyreviewer/{paper}/{reviewer}";
		rr:termType rr:IRI;
		rr:class <http://example.com/readbyreviewer>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/readbyreviewer#paper>;
		rr:objectMap [ rr:column "paper"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/readbyreviewer#reviewer>;
		rr:objectMap [ rr:column "reviewer"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/readbyreviewer#ref-paper>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap10>;
			rr:joinCondition [
				rr:child "paper";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/readbyreviewer#ref-reviewer>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap30>;
			rr:joinCondition [
				rr:child "reviewer";
				rr:parent "id";
			];
		];
	].

<#TriplesMap306>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/readbyreviewer#paper>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/readbyreviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap307>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/readbyreviewer#reviewer>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/readbyreviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap308>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/readbyreviewer>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap309>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/paperHasreviewer>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/reviewerHaspaper> ];
	].

<#TriplesMap310>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_98343.\"reviewer\" AS reviewer, t_98343.\"paper\" AS paper FROM (\"paper\" AS t_67079 JOIN \"readbyreviewer\" AS t_98343 ON ((t_67079.\"id\"=t_98343.\"paper\"))) JOIN \"reviewer\" AS t_04110 ON ((t_04110.\"id\"=t_98343.\"reviewer\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/paper/{paper}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/paperHasreviewer>;
		rr:objectMap [ rr:template "http://example.com/reviewer/{reviewer}" ];
	].

<#TriplesMap311>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/reviewerHaspaper>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/paper> ];
	].

<#TriplesMap312>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/decision>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap313>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "rejection"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/rejection/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/rejection>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/rejection#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/rejection#ref-id>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap1>;
			rr:joinCondition [
				rr:child "id";
				rr:parent "id";
			];
		];
	].

<#TriplesMap314>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/rejection>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap315>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/rejection#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/rejection> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap316>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/decisionHasrejection>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/decision> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/rejection> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/rejectionHasdecision> ];
	].

<#TriplesMap317>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_93359.\"id\" FROM (\"decision\" AS t_93359 JOIN \"rejection\" AS t_17234 ON ((t_93359.\"id\"=t_17234.\"id\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/decision/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/decisionHasrejection>;
		rr:objectMap [ rr:template "http://example.com/rejection/{id}" ];
	].

<#TriplesMap318>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/rejectionHasdecision>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/rejection> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/decision> ];
	].

<#TriplesMap319>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/documentHasreviewer>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/document> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/reviewerHasdocument> ];
	].

<#TriplesMap320>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_17678.\"writtenby\" AS writtenby, t_17678.\"id\" AS id FROM (\"document\" AS t_06230 JOIN \"review\" AS t_17678 ON ((t_06230.\"id\"=t_17678.\"id\"))) JOIN \"reviewer\" AS t_21726 ON ((t_21726.\"id\"=t_17678.\"writtenby\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/document/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/documentHasreviewer>;
		rr:objectMap [ rr:template "http://example.com/reviewer/{writtenby}" ];
	].

<#TriplesMap321>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/reviewerHasdocument>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/document> ];
	].

<#TriplesMap322>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT t_15222.\"id\" FROM \"conferencemember\" AS t_42587 JOIN \"reviewer\" AS t_15222 ON (t_42587.\"id\"=t_15222.\"id\")" 
	];

	rr:subjectMap [
		rr:template "http://example.com/reviewer/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/reviewer>;
	];

	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [ rr:constant <http://example.com/conferencemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/reviewer#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	].

<#TriplesMap323>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/conferencememberHasreviewer>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/conferencemember> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/reviewerHasconferencemember> ];
	].

<#TriplesMap324>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_73116.\"id\" FROM (\"conferencemember\" AS t_73116 JOIN \"reviewer\" AS t_28719 ON ((t_73116.\"id\"=t_28719.\"id\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/conferencemember/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/conferencememberHasreviewer>;
		rr:objectMap [ rr:template "http://example.com/reviewer/{id}" ];
	].

<#TriplesMap325>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/reviewerHasconferencemember>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/reviewer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/conferencemember> ];
	].

<#TriplesMap326>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "reviewerbiddingstartedby"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/reviewerbiddingstartedby/{conference}/{administrator}";
		rr:termType rr:IRI;
		rr:class <http://example.com/reviewerbiddingstartedby>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/reviewerbiddingstartedby#conference>;
		rr:objectMap [ rr:column "conference"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/reviewerbiddingstartedby#administrator>;
		rr:objectMap [ rr:column "administrator"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/reviewerbiddingstartedby#ref-administrator>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap23>;
			rr:joinCondition [
				rr:child "administrator";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/reviewerbiddingstartedby#ref-conference>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap117>;
			rr:joinCondition [
				rr:child "conference";
				rr:parent "id";
			];
		];
	].

<#TriplesMap327>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/reviewerbiddingstartedby#conference>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/reviewerbiddingstartedby> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap328>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/reviewerbiddingstartedby#administrator>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/reviewerbiddingstartedby> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap329>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/reviewerbiddingstartedby>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap330>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/administratorHasconference>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/conferenceHasadministrator> ];
	].

<#TriplesMap331>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_50584.\"conference\" AS conference, t_50584.\"administrator\" AS administrator FROM (\"administrator\" AS t_18446 JOIN \"reviewerbiddingstartedby\" AS t_50584 ON ((t_18446.\"id\"=t_50584.\"administrator\"))) JOIN \"conference\" AS t_21997 ON ((t_21997.\"id\"=t_50584.\"conference\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/administrator/{administrator}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/administratorHasconference>;
		rr:objectMap [ rr:template "http://example.com/conference/{conference}" ];
	].

<#TriplesMap332>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/conferenceHasadministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/conference> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	].

<#TriplesMap333>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/administrator>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap334>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "setmaxpapers"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/setmaxpapers/{administrator}/setmaxpapers/{programcommitteemember}";
		rr:termType rr:IRI;
		rr:class <http://example.com/setmaxpapers>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/setmaxpapers#administrator>;
		rr:objectMap [ rr:column "administrator"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/setmaxpapers#programcommitteemember>;
		rr:objectMap [ rr:column "programcommitteemember"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/setmaxpapers#ref-administrator>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap23>;
			rr:joinCondition [
				rr:child "administrator";
				rr:parent "id";
			];
		];
	].

<#TriplesMap335>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/setmaxpapers>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap336>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/setmaxpapers#administrator>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/setmaxpapers> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap337>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/setmaxpapers#programcommitteemember>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/setmaxpapers> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap338>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/administratorHassetmaxpapers>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/setmaxpapers> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/setmaxpapersHasadministrator> ];
	].

<#TriplesMap339>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_68934.\"id\" FROM (\"administrator\" AS t_68934 JOIN \"setmaxpapers\" AS t_15983 ON ((t_68934.\"id\"=t_15983.\"administrator\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/administrator/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/administratorHassetmaxpapers>;
		rr:objectMap [ rr:template "http://example.com/setmaxpapers/{id}" ];
	].

<#TriplesMap340>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/setmaxpapersHasadministrator>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/setmaxpapers> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/administrator> ];
	].

<#TriplesMap341>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "submitpaper"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/submitpaper/{author}/{paper}";
		rr:termType rr:IRI;
		rr:class <http://example.com/submitpaper>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/submitpaper#author>;
		rr:objectMap [ rr:column "author"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/submitpaper#paper>;
		rr:objectMap [ rr:column "paper"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/submitpaper#ref-author>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap59>;
			rr:joinCondition [
				rr:child "author";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/submitpaper#ref-paper>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap10>;
			rr:joinCondition [
				rr:child "paper";
				rr:parent "id";
			];
		];
	].

<#TriplesMap342>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/submitpaper#author>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/submitpaper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap343>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/submitpaper#paper>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/submitpaper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap344>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/submitpaper>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap345>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/authorHaspaper>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/author> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/paperHasauthor> ];
	].

<#TriplesMap346>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_62004.\"paper\" AS paper, t_62004.\"author\" AS author FROM (\"author\" AS t_10185 JOIN \"submitpaper\" AS t_62004 ON ((t_10185.\"id\"=t_62004.\"author\"))) JOIN \"paper\" AS t_09221 ON ((t_09221.\"id\"=t_62004.\"paper\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/author/{author}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/authorHaspaper>;
		rr:objectMap [ rr:template "http://example.com/paper/{paper}" ];
	].

<#TriplesMap347>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/paperHasauthor>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/paper> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/author> ];
	].

<#TriplesMap348>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/person>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap349>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT t_74418.\"id\", t_17447.\"name\", t_17447.\"email\" FROM \"person\" AS t_17447 JOIN \"user\" AS t_74418 ON (t_17447.\"id\"=t_74418.\"id\")" 
	];

	rr:subjectMap [
		rr:template "http://example.com/user/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/user>;
	];

	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [ rr:constant <http://example.com/person> ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/user#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/user#name>;
		rr:objectMap [ rr:column "name"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/user#email>;
		rr:objectMap [ rr:column "email"; rr:datatype xsd:string; ];
	].

<#TriplesMap350>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/user>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant <http://example.com/person> ];
	].

<#TriplesMap351>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/personHasuser>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/person> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/user> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/userHasperson> ];
	].

<#TriplesMap352>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_35147.\"id\" FROM (\"person\" AS t_35147 JOIN \"user\" AS t_78583 ON ((t_35147.\"id\"=t_78583.\"id\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/person/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/personHasuser>;
		rr:objectMap [ rr:template "http://example.com/user/{id}" ];
	].

<#TriplesMap353>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/userHasperson>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/user> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/person> ];
	].

<#TriplesMap354>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "markconflictofinterest"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/markconflictofinterest/{conferencemember}/{paper}";
		rr:termType rr:IRI;
		rr:class <http://example.com/markconflictofinterest>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/markconflictofinterest#conferencemember>;
		rr:objectMap [ rr:column "conferencemember"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/markconflictofinterest#paper>;
		rr:objectMap [ rr:column "paper"; rr:datatype xsd:integer; ];
	].

<#TriplesMap355>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/markconflictofinterest>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap356>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/markconflictofinterest#conferencemember>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/markconflictofinterest> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap357>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/markconflictofinterest#paper>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/markconflictofinterest> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap358>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "preference"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/preference/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/preference>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/preference#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	].

<#TriplesMap359>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/preference>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap360>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/preference#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/preference> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

