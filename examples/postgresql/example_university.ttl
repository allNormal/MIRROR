@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix foaf: <http://xmlns.com/foaf/0.1#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix dc: <http://purl.org/dc/elements/1.1#> .
@prefix dc: <http://purl.org/stuff/rev#> .
@prefix rev: <http://purl.org/stuff/rev#> .
@prefix bsbm: <http://www4.wiwiss.fu-berlin.de/bizer/bsbm/v01/vocabulary/> .
@prefix bsbm-inst: <http://www4.wiwiss.fu-berlin.de/bizer/bsbm/v01/vocabulary/> .
@prefix ex: <http://example.com/> .

@base <http://mappingpedia.org/rdb2rdf/r2rml/tc/> .

<#TriplesMap1>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "dept"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/dept/{code}";
		rr:termType rr:IRI;
		rr:class <http://example.com/dept>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/dept#code>;
		rr:objectMap [ rr:column "code"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/dept#name>;
		rr:objectMap [ rr:column "name"; rr:datatype xsd:string; ];
	].

<#TriplesMap2>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/dept#code>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/dept> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap3>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/dept#name>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/dept> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap4>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/dept>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap5>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT t_62927.\"cno\", t_62927.\"title\", t_62927.\"code\", t_57847.\"name\" FROM \"dept\" AS t_57847 JOIN \"course\" AS t_62927 ON (t_57847.\"code\"=t_62927.\"code\")" 
	];

	rr:subjectMap [
		rr:template "http://example.com";
		rr:termType rr:IRI;
		rr:class <http://example.com/course>;
	];

	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [ rr:constant <http://example.com/dept> ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/course#cno>;
		rr:objectMap [ rr:column "cno"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/course#title>;
		rr:objectMap [ rr:column "title"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/course#code>;
		rr:objectMap [ rr:column "code"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/course#name>;
		rr:objectMap [ rr:column "name"; rr:datatype xsd:string; ];
	].

<#TriplesMap6>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/course>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant <http://example.com/dept> ];
	].

<#TriplesMap7>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/course#cno>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/course> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap8>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/course#title>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/course> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap9>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/course#code>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/course> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap10>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/deptHascourse>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/dept> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/course> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/courseHasdept> ];
	].

<#TriplesMap11>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_37848.\"code\" FROM (\"dept\" AS t_37848 JOIN \"course\" AS t_85935 ON ((t_37848.\"code\"=t_85935.\"code\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/dept/{code}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/deptHascourse>;
		rr:objectMap [ rr:template "http://example.com/course/{code}" ];
	].

<#TriplesMap12>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/courseHasdept>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/course> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/dept> ];
	].

<#TriplesMap13>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "offer"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/offer/{ono}";
		rr:termType rr:IRI;
		rr:class <http://example.com/offer>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/offer#ono>;
		rr:objectMap [ rr:column "ono"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/offer#cno>;
		rr:objectMap [ rr:column "cno"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/offer#sno>;
		rr:objectMap [ rr:column "sno"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/offer#pid>;
		rr:objectMap [ rr:column "pid"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/offer#cono>;
		rr:objectMap [ rr:column "cono"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/offer#ref-cno>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap5>;
			rr:joinCondition [
				rr:child "cno";
				rr:parent "cno";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/offer#ref-pid>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap20>;
			rr:joinCondition [
				rr:child "pid";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/offer#ref-sno>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap24>;
			rr:joinCondition [
				rr:child "sno";
				rr:parent "sno";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/offer#ref-cono>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap13>;
			rr:joinCondition [
				rr:child "cono";
				rr:parent "ono";
			];
		];
	].

<#TriplesMap14>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/offer#ono>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/offer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap15>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/offer#cno>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/offer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap16>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/offer#sno>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/offer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap17>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/offer#pid>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/offer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap18>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/offer#cono>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/offer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap19>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/offer>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap20>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "professor"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/professor/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/professor>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/professor#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/professor#title>;
		rr:objectMap [ rr:column "title"; rr:datatype xsd:string; ];
	].

<#TriplesMap21>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/professor#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/professor> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap22>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/professor#title>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/professor> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap23>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/professor>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap24>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "semester"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/semester/{sno}";
		rr:termType rr:IRI;
		rr:class <http://example.com/semester>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/semester#sno>;
		rr:objectMap [ rr:column "sno"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/semester#year>;
		rr:objectMap [ rr:column "year"; rr:datatype xsd:date; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/semester#session>;
		rr:objectMap [ rr:column "session"; rr:datatype xsd:string; ];
	].

<#TriplesMap25>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/semester#sno>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/semester> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap26>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/semester#year>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/semester> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:date ];
	].

<#TriplesMap27>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/semester#session>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/semester> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap28>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/semester>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap29>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/courseHasoffer>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/course> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/offer> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/offerHascourse> ];
	].

<#TriplesMap30>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_91111.\"cono\" AS cono, t_91111.\"cno\" AS cno FROM (\"course\" AS t_82996 JOIN \"offer\" AS t_91111 ON ((t_82996.\"cno\"=t_91111.\"cno\"))) JOIN \"offer\" AS t_55723 ON ((t_55723.\"ono\"=t_91111.\"cono\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/course/{cno}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/courseHasoffer>;
		rr:objectMap [ rr:template "http://example.com/offer/{cono}" ];
	].

<#TriplesMap31>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/offerHascourse>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/offer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/course> ];
	].

<#TriplesMap32>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/courseHasprofessor>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/course> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/professor> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/professorHascourse> ];
	].

<#TriplesMap33>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_82025.\"pid\" AS pid, t_82025.\"cno\" AS cno FROM (\"course\" AS t_09154 JOIN \"offer\" AS t_82025 ON ((t_09154.\"cno\"=t_82025.\"cno\"))) JOIN \"professor\" AS t_89998 ON ((t_89998.\"id\"=t_82025.\"pid\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/course/{cno}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/courseHasprofessor>;
		rr:objectMap [ rr:template "http://example.com/professor/{pid}" ];
	].

<#TriplesMap34>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/professorHascourse>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/professor> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/course> ];
	].

<#TriplesMap35>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/offerHasprofessor>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/offer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/professor> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/professorHasoffer> ];
	].

<#TriplesMap36>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_47570.\"pid\" AS pid, t_47570.\"cono\" AS cono FROM (\"offer\" AS t_35646 JOIN \"offer\" AS t_47570 ON ((t_35646.\"ono\"=t_47570.\"cono\"))) JOIN \"professor\" AS t_54657 ON ((t_54657.\"id\"=t_47570.\"pid\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/offer/{cono}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/offerHasprofessor>;
		rr:objectMap [ rr:template "http://example.com/professor/{pid}" ];
	].

<#TriplesMap37>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/professorHasoffer>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/professor> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/offer> ];
	].

<#TriplesMap38>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/courseHassemester>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/course> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/semester> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/semesterHascourse> ];
	].

<#TriplesMap39>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_91889.\"sno\" AS sno, t_91889.\"cno\" AS cno FROM (\"course\" AS t_07316 JOIN \"offer\" AS t_91889 ON ((t_07316.\"cno\"=t_91889.\"cno\"))) JOIN \"semester\" AS t_45117 ON ((t_45117.\"sno\"=t_91889.\"sno\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/course/{cno}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/courseHassemester>;
		rr:objectMap [ rr:template "http://example.com/semester/{sno}" ];
	].

<#TriplesMap40>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/semesterHascourse>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/semester> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/course> ];
	].

<#TriplesMap41>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/offerHassemester>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/offer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/semester> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/semesterHasoffer> ];
	].

<#TriplesMap42>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_67224.\"sno\" AS sno, t_67224.\"cono\" AS cono FROM (\"offer\" AS t_68420 JOIN \"offer\" AS t_67224 ON ((t_68420.\"ono\"=t_67224.\"cono\"))) JOIN \"semester\" AS t_48043 ON ((t_48043.\"sno\"=t_67224.\"sno\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/offer/{cono}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/offerHassemester>;
		rr:objectMap [ rr:template "http://example.com/semester/{sno}" ];
	].

<#TriplesMap43>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/semesterHasoffer>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/semester> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/offer> ];
	].

<#TriplesMap44>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/professorHassemester>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/professor> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/semester> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/semesterHasprofessor> ];
	].

<#TriplesMap45>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_03517.\"sno\" AS sno, t_03517.\"pid\" AS pid FROM (\"professor\" AS t_20997 JOIN \"offer\" AS t_03517 ON ((t_20997.\"id\"=t_03517.\"pid\"))) JOIN \"semester\" AS t_50514 ON ((t_50514.\"sno\"=t_03517.\"sno\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/professor/{pid}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/professorHassemester>;
		rr:objectMap [ rr:template "http://example.com/semester/{sno}" ];
	].

<#TriplesMap46>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/semesterHasprofessor>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/semester> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/professor> ];
	].

<#TriplesMap47>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "person"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/person/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/person>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/person#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/person#name>;
		rr:objectMap [ rr:column "name"; rr:datatype xsd:string; ];
	].

<#TriplesMap48>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/person#id>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/person> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap49>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/person#name>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/person> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap50>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/person>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap51>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT t_47414.\"id\", t_47414.\"title\", t_32962.\"name\" FROM \"person\" AS t_32962 JOIN \"professor\" AS t_47414 ON (t_32962.\"id\"=t_47414.\"id\")" 
	];

	rr:subjectMap [
		rr:template "http://example.com";
		rr:termType rr:IRI;
		rr:class <http://example.com/professor>;
	];

	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [ rr:constant <http://example.com/person> ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/professor#id>;
		rr:objectMap [ rr:column "id"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/professor#title>;
		rr:objectMap [ rr:column "title"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/professor#name>;
		rr:objectMap [ rr:column "name"; rr:datatype xsd:string; ];
	].

<#TriplesMap52>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/professor>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant <http://example.com/person> ];
	].

<#TriplesMap53>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/personHasprofessor>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/person> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/professor> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/professorHasperson> ];
	].

<#TriplesMap54>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_65911.\"id\" FROM (\"person\" AS t_65911 JOIN \"professor\" AS t_51064 ON ((t_65911.\"id\"=t_51064.\"id\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/person/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/personHasprofessor>;
		rr:objectMap [ rr:template "http://example.com/professor/{id}" ];
	].

<#TriplesMap55>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/professorHasperson>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/professor> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/person> ];
	].

<#TriplesMap56>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "student"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/student/{id}";
		rr:termType rr:IRI;
		rr:class <http://example.com/student>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/student#rollno>;
		rr:objectMap [ rr:column "rollno"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/student#degree>;
		rr:objectMap [ rr:column "degree"; rr:datatype xsd:string; ];
	].

<#TriplesMap57>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/student#rollno>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/student> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap58>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/student#degree>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/student> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap59>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/student>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap60>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "reg"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/reg/{sid}/{sno}";
		rr:termType rr:IRI;
		rr:class <http://example.com/reg>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/reg#sid>;
		rr:objectMap [ rr:column "sid"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/reg#semester>;
		rr:objectMap [ rr:template "http://example.com/semester/{SNO}" ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/reg#ref-sid>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap56>;
			rr:joinCondition [
				rr:child "sid";
				rr:parent "id";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/reg#ref-sno>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap24>;
			rr:joinCondition [
				rr:child "sno";
				rr:parent "sno";
			];
		];
	].

<#TriplesMap61>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/reg#sid>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/reg> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap62>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/reg#sno>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/reg> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap63>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/reg>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap64>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/semesterHasstudent>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/semester> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/student> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/studentHassemester> ];
	].

<#TriplesMap65>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_12647.\"sid\" AS sid, t_12647.\"sno\" AS sno FROM (\"semester\" AS t_88992 JOIN \"reg\" AS t_12647 ON ((t_88992.\"sno\"=t_12647.\"sno\"))) JOIN \"student\" AS t_57215 ON ((t_57215.\"id\"=t_12647.\"sid\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/semester/{sno}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/semesterHasstudent>;
		rr:objectMap [ rr:template "http://example.com/student/{sid}" ];
	].

<#TriplesMap66>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/studentHassemester>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/student> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/semester> ];
	].

<#TriplesMap67>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/person>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap68>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT t_06167.\"rollno\", t_06167.\"degree\", t_37637.\"name\" FROM \"person\" AS t_37637 JOIN \"student\" AS t_06167 ON (t_37637.\"id\"=t_06167.\"rollno\")" 
	];

	rr:subjectMap [
		rr:template "http://example.com";
		rr:termType rr:IRI;
		rr:class <http://example.com/student>;
	];

	rr:predicateObjectMap [
		rr:predicate rdf:type;
		rr:objectMap [ rr:constant <http://example.com/person> ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/student#rollno>;
		rr:objectMap [ rr:column "rollno"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/student#degree>;
		rr:objectMap [ rr:column "degree"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/student#name>;
		rr:objectMap [ rr:column "name"; rr:datatype xsd:string; ];
	].

<#TriplesMap69>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/student>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant <http://example.com/person> ];
	].

<#TriplesMap70>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/personHasstudent>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/person> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/student> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/studentHasperson> ];
	].

<#TriplesMap71>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_95168.\"id\" FROM (\"person\" AS t_95168 JOIN \"student\" AS t_83899 ON ((t_95168.\"id\"=t_83899.\"id\")))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/person/{id}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/personHasstudent>;
		rr:objectMap [ rr:template "http://example.com/student/{id}" ];
	].

<#TriplesMap72>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/studentHasperson>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/student> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/person> ];
	].

<#TriplesMap73>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "study"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/study/{ono}/{rno}";
		rr:termType rr:IRI;
		rr:class <http://example.com/study>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/study#offer>;
		rr:objectMap [ rr:template "http://example.com/offer/{ONO}" ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/study#rno>;
		rr:objectMap [ rr:column "rno"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/study#grade>;
		rr:objectMap [ rr:column "grade"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/study#ref-ono>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap13>;
			rr:joinCondition [
				rr:child "ono";
				rr:parent "ono";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/study#ref-rno>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap56>;
			rr:joinCondition [
				rr:child "rno";
				rr:parent "rollno";
			];
		];
	].

<#TriplesMap74>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/study#ono>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/study> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap75>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/study#rno>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/study> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap76>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/study#grade>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/study> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap77>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/study>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap78>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/offerHasstudent>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/offer> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/student> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/studentHasoffer> ];
	].

<#TriplesMap79>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_24464.\"rno\" AS rno, t_24464.\"ono\" AS ono FROM (\"offer\" AS t_05020 JOIN \"study\" AS t_24464 ON ((t_05020.\"ono\"=t_24464.\"ono\"))) JOIN \"student\" AS t_39305 ON ((t_39305.\"rollno\"=t_24464.\"rno\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/offer/{ono}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/offerHasstudent>;
		rr:objectMap [ rr:template "http://example.com/student/{rno}" ];
	].

<#TriplesMap80>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/studentHasoffer>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/student> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/offer> ];
	].

