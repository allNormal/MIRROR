@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix foaf: <http://xmlns.com/foaf/0.1#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix dc: <http://purl.org/dc/elements/1.1#> .
@prefix dc: <http://purl.org/stuff/rev#> .
@prefix rev: <http://purl.org/stuff/rev#> .
@prefix bsbm: <http://www4.wiwiss.fu-berlin.de/bizer/bsbm/v01/vocabulary/> .
@prefix bsbm-inst: <http://www4.wiwiss.fu-berlin.de/bizer/bsbm/v01/vocabulary/> .
@prefix ex: <http://example.com/> .

@base <http://mappingpedia.org/rdb2rdf/r2rml/tc/> .

<#TriplesMap1>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "parent1"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/parent1/{ID_FIRST}/parent1/{ID_SECOND}/parent1/{ID_FIRST}/parent1/{ID_SECOND}";
		rr:termType rr:IRI;
		rr:class <http://example.com/parent1>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/parent1#id_first>;
		rr:objectMap [ rr:column "ID_FIRST"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/parent1#id_second>;
		rr:objectMap [ rr:column "ID_SECOND"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/parent1#name>;
		rr:objectMap [ rr:column "NAME"; rr:datatype xsd:string; ];
	].

<#TriplesMap2>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent1#id_first>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap3>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent1#id_second>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap4>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent1#name>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap5>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent1>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap6>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "parent2"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/parent2/{ID_FOURTH}/parent2/{ID_THIRD}/parent2/{ID_FOURTH}/parent2/{ID_THIRD}";
		rr:termType rr:IRI;
		rr:class <http://example.com/parent2>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/parent2#id_third>;
		rr:objectMap [ rr:column "ID_THIRD"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/parent2#id_fourth>;
		rr:objectMap [ rr:column "ID_FOURTH"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/parent2#name>;
		rr:objectMap [ rr:column "NAME"; rr:datatype xsd:string; ];
	].

<#TriplesMap7>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent2#id_third>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap8>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent2#id_fourth>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap9>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent2#name>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap10>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent2>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap11>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "child"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/child/{ID_FIRST}/{ID_SECOND}/{ID_THIRD}/{ID_FOURTH}";
		rr:termType rr:IRI;
		rr:class <http://example.com/child>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/child#parent1>;
		rr:objectMap [ rr:template "http://example.com/parent1/{ID_FIRST}" ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/child#parent1>;
		rr:objectMap [ rr:template "http://example.com/parent1/{ID_SECOND}" ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/child#parent2>;
		rr:objectMap [ rr:template "http://example.com/parent2/{ID_THIRD}" ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/child#parent2>;
		rr:objectMap [ rr:template "http://example.com/parent2/{ID_FOURTH}" ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/child#COMMENTS>;
		rr:objectMap [ rr:column "COMMENTS"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/child#ref-ID_FIRST>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap1>;
			rr:joinCondition [
				rr:child "ID_FIRST";
				rr:parent "ID_FIRST";
			];
			rr:joinCondition [
				rr:child "ID_SECOND";
				rr:parent "ID_SECOND";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/child#ref-ID_THIRD>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap6>;
			rr:joinCondition [
				rr:child "ID_THIRD";
				rr:parent "ID_THIRD";
			];
			rr:joinCondition [
				rr:child "ID_FOURTH";
				rr:parent "ID_FOURTH";
			];
		];
	].

<#TriplesMap12>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/child#id_first>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/child> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap13>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/child#id_second>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/child> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap14>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/child#id_third>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/child> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap15>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/child#id_fourth>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/child> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap16>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/child#comments>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/child> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap17>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/child>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap18>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent1Hasparent2>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/parent2Hasparent1> ];
	].

<#TriplesMap19>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_61142.\"ID_FOURTH\" AS ID_FOURTH, t_61142.\"ID_FOURTH\" AS ID_FOURTH, t_61142.\"ID_THIRD\" AS ID_THIRD, t_61142.\"ID_THIRD\" AS ID_THIRD, t_61142.\"ID_SECOND\" AS ID_SECOND, t_61142.\"ID_SECOND\" AS ID_SECOND, t_61142.\"ID_FIRST\" AS ID_FIRST, t_61142.\"ID_FIRST\" AS ID_FIRST FROM (\"parent1\" AS t_76693 JOIN \"child\" AS t_61142 ON ((t_76693.\"ID_FIRST\"=t_61142.\"ID_FIRST\"))) JOIN \"parent2\" AS t_55233 ON ((t_55233.\"ID_SECOND\"=t_61142.\"ID_FIRST\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/parent1/{ID_FIRST}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/parent1Hasparent2>;
		rr:objectMap [ rr:template "http://example.com/parent2/{ID_THIRD}" ];
	].

<#TriplesMap20>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent2Hasparent1>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	].

<#TriplesMap21>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent1Hasparent2>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/parent2Hasparent1> ];
	].

<#TriplesMap22>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_09437.\"ID_FOURTH\" AS ID_FOURTH, t_09437.\"ID_FOURTH\" AS ID_FOURTH, t_09437.\"ID_THIRD\" AS ID_THIRD, t_09437.\"ID_THIRD\" AS ID_THIRD, t_09437.\"ID_SECOND\" AS ID_SECOND, t_09437.\"ID_SECOND\" AS ID_SECOND, t_09437.\"ID_FIRST\" AS ID_FIRST, t_09437.\"ID_FIRST\" AS ID_FIRST FROM (\"parent1\" AS t_01906 JOIN \"child\" AS t_09437 ON ((t_01906.\"ID_FIRST\"=t_09437.\"ID_FIRST\"))) JOIN \"parent2\" AS t_62739 ON ((t_62739.\"ID_SECOND\"=t_09437.\"ID_FIRST\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/parent1/{ID_FIRST}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/parent1Hasparent2>;
		rr:objectMap [ rr:template "http://example.com/parent2/{ID_THIRD}" ];
	].

<#TriplesMap23>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent2Hasparent1>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	].

<#TriplesMap24>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent1Hasparent2>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/parent2Hasparent1> ];
	].

<#TriplesMap25>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_28826.\"ID_FOURTH\" AS ID_FOURTH, t_28826.\"ID_FOURTH\" AS ID_FOURTH, t_28826.\"ID_THIRD\" AS ID_THIRD, t_28826.\"ID_THIRD\" AS ID_THIRD, t_28826.\"ID_SECOND\" AS ID_SECOND, t_28826.\"ID_SECOND\" AS ID_SECOND, t_28826.\"ID_FIRST\" AS ID_FIRST, t_28826.\"ID_FIRST\" AS ID_FIRST FROM (\"parent1\" AS t_78038 JOIN \"child\" AS t_28826 ON ((t_78038.\"ID_FIRST\"=t_28826.\"ID_FIRST\"))) JOIN \"parent2\" AS t_92427 ON ((t_92427.\"ID_SECOND\"=t_28826.\"ID_FIRST\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/parent1/{ID_FIRST}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/parent1Hasparent2>;
		rr:objectMap [ rr:template "http://example.com/parent2/{ID_THIRD}" ];
	].

<#TriplesMap26>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent2Hasparent1>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	].

<#TriplesMap27>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent1Hasparent2>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/parent2Hasparent1> ];
	].

<#TriplesMap28>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_29961.\"ID_FOURTH\" AS ID_FOURTH, t_29961.\"ID_FOURTH\" AS ID_FOURTH, t_29961.\"ID_THIRD\" AS ID_THIRD, t_29961.\"ID_THIRD\" AS ID_THIRD, t_29961.\"ID_SECOND\" AS ID_SECOND, t_29961.\"ID_SECOND\" AS ID_SECOND, t_29961.\"ID_FIRST\" AS ID_FIRST, t_29961.\"ID_FIRST\" AS ID_FIRST FROM (\"parent1\" AS t_87500 JOIN \"child\" AS t_29961 ON ((t_87500.\"ID_FIRST\"=t_29961.\"ID_FIRST\"))) JOIN \"parent2\" AS t_79211 ON ((t_79211.\"ID_SECOND\"=t_29961.\"ID_FIRST\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/parent1/{ID_FIRST}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/parent1Hasparent2>;
		rr:objectMap [ rr:template "http://example.com/parent2/{ID_THIRD}" ];
	].

<#TriplesMap29>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent2Hasparent1>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	].

<#TriplesMap30>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent1Hasparent2>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/parent2Hasparent1> ];
	].

<#TriplesMap31>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_13129.\"ID_FOURTH\" AS ID_FOURTH, t_13129.\"ID_FOURTH\" AS ID_FOURTH, t_13129.\"ID_THIRD\" AS ID_THIRD, t_13129.\"ID_THIRD\" AS ID_THIRD, t_13129.\"ID_SECOND\" AS ID_SECOND, t_13129.\"ID_SECOND\" AS ID_SECOND, t_13129.\"ID_FIRST\" AS ID_FIRST, t_13129.\"ID_FIRST\" AS ID_FIRST FROM (\"parent1\" AS t_49929 JOIN \"child\" AS t_13129 ON ((t_49929.\"ID_FIRST\"=t_13129.\"ID_FIRST\"))) JOIN \"parent2\" AS t_91667 ON ((t_91667.\"ID_SECOND\"=t_13129.\"ID_FIRST\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/parent1/{ID_FIRST}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/parent1Hasparent2>;
		rr:objectMap [ rr:template "http://example.com/parent2/{ID_THIRD}" ];
	].

<#TriplesMap32>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent2Hasparent1>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	].

<#TriplesMap33>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent1Hasparent2>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/parent2Hasparent1> ];
	].

<#TriplesMap34>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_77396.\"ID_FOURTH\" AS ID_FOURTH, t_77396.\"ID_FOURTH\" AS ID_FOURTH, t_77396.\"ID_THIRD\" AS ID_THIRD, t_77396.\"ID_THIRD\" AS ID_THIRD, t_77396.\"ID_SECOND\" AS ID_SECOND, t_77396.\"ID_SECOND\" AS ID_SECOND, t_77396.\"ID_FIRST\" AS ID_FIRST, t_77396.\"ID_FIRST\" AS ID_FIRST FROM (\"parent1\" AS t_70683 JOIN \"child\" AS t_77396 ON ((t_70683.\"ID_FIRST\"=t_77396.\"ID_FIRST\"))) JOIN \"parent2\" AS t_35753 ON ((t_35753.\"ID_SECOND\"=t_77396.\"ID_FIRST\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/parent1/{ID_FIRST}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/parent1Hasparent2>;
		rr:objectMap [ rr:template "http://example.com/parent2/{ID_THIRD}" ];
	].

<#TriplesMap35>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent2Hasparent1>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	].

<#TriplesMap36>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent1Hasparent2>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/parent2Hasparent1> ];
	].

<#TriplesMap37>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_05445.\"ID_FOURTH\" AS ID_FOURTH, t_05445.\"ID_FOURTH\" AS ID_FOURTH, t_05445.\"ID_THIRD\" AS ID_THIRD, t_05445.\"ID_THIRD\" AS ID_THIRD, t_05445.\"ID_SECOND\" AS ID_SECOND, t_05445.\"ID_SECOND\" AS ID_SECOND, t_05445.\"ID_FIRST\" AS ID_FIRST, t_05445.\"ID_FIRST\" AS ID_FIRST FROM (\"parent1\" AS t_81385 JOIN \"child\" AS t_05445 ON ((t_81385.\"ID_FIRST\"=t_05445.\"ID_FIRST\"))) JOIN \"parent2\" AS t_03439 ON ((t_03439.\"ID_SECOND\"=t_05445.\"ID_FIRST\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/parent1/{ID_FIRST}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/parent1Hasparent2>;
		rr:objectMap [ rr:template "http://example.com/parent2/{ID_THIRD}" ];
	].

<#TriplesMap38>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent2Hasparent1>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	].

<#TriplesMap39>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent1Hasparent2>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/parent2Hasparent1> ];
	].

<#TriplesMap40>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_50030.\"ID_FOURTH\" AS ID_FOURTH, t_50030.\"ID_FOURTH\" AS ID_FOURTH, t_50030.\"ID_THIRD\" AS ID_THIRD, t_50030.\"ID_THIRD\" AS ID_THIRD, t_50030.\"ID_SECOND\" AS ID_SECOND, t_50030.\"ID_SECOND\" AS ID_SECOND, t_50030.\"ID_FIRST\" AS ID_FIRST, t_50030.\"ID_FIRST\" AS ID_FIRST FROM (\"parent1\" AS t_59548 JOIN \"child\" AS t_50030 ON ((t_59548.\"ID_FIRST\"=t_50030.\"ID_FIRST\"))) JOIN \"parent2\" AS t_88016 ON ((t_88016.\"ID_SECOND\"=t_50030.\"ID_FIRST\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/parent1/{ID_FIRST}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/parent1Hasparent2>;
		rr:objectMap [ rr:template "http://example.com/parent2/{ID_THIRD}" ];
	].

<#TriplesMap41>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent2Hasparent1>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	].

<#TriplesMap42>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent1Hasparent2>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/parent2Hasparent1> ];
	].

<#TriplesMap43>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_76115.\"ID_FOURTH\" AS ID_FOURTH, t_76115.\"ID_FOURTH\" AS ID_FOURTH, t_76115.\"ID_THIRD\" AS ID_THIRD, t_76115.\"ID_THIRD\" AS ID_THIRD, t_76115.\"ID_SECOND\" AS ID_SECOND, t_76115.\"ID_SECOND\" AS ID_SECOND, t_76115.\"ID_FIRST\" AS ID_FIRST, t_76115.\"ID_FIRST\" AS ID_FIRST FROM (\"parent1\" AS t_81610 JOIN \"child\" AS t_76115 ON ((t_81610.\"ID_FIRST\"=t_76115.\"ID_FIRST\"))) JOIN \"parent2\" AS t_14375 ON ((t_14375.\"ID_SECOND\"=t_76115.\"ID_FIRST\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/parent1/{ID_FIRST}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/parent1Hasparent2>;
		rr:objectMap [ rr:template "http://example.com/parent2/{ID_THIRD}" ];
	].

<#TriplesMap44>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent2Hasparent1>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	].

<#TriplesMap45>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent1Hasparent2>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/parent2Hasparent1> ];
	].

<#TriplesMap46>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_28277.\"ID_FOURTH\" AS ID_FOURTH, t_28277.\"ID_FOURTH\" AS ID_FOURTH, t_28277.\"ID_THIRD\" AS ID_THIRD, t_28277.\"ID_THIRD\" AS ID_THIRD, t_28277.\"ID_SECOND\" AS ID_SECOND, t_28277.\"ID_SECOND\" AS ID_SECOND, t_28277.\"ID_FIRST\" AS ID_FIRST, t_28277.\"ID_FIRST\" AS ID_FIRST FROM (\"parent1\" AS t_54327 JOIN \"child\" AS t_28277 ON ((t_54327.\"ID_FIRST\"=t_28277.\"ID_FIRST\"))) JOIN \"parent2\" AS t_83610 ON ((t_83610.\"ID_SECOND\"=t_28277.\"ID_FIRST\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/parent1/{ID_FIRST}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/parent1Hasparent2>;
		rr:objectMap [ rr:template "http://example.com/parent2/{ID_THIRD}" ];
	].

<#TriplesMap47>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent2Hasparent1>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	].

<#TriplesMap48>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent1Hasparent2>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/parent2Hasparent1> ];
	].

<#TriplesMap49>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_49346.\"ID_FOURTH\" AS ID_FOURTH, t_49346.\"ID_FOURTH\" AS ID_FOURTH, t_49346.\"ID_THIRD\" AS ID_THIRD, t_49346.\"ID_THIRD\" AS ID_THIRD, t_49346.\"ID_SECOND\" AS ID_SECOND, t_49346.\"ID_SECOND\" AS ID_SECOND, t_49346.\"ID_FIRST\" AS ID_FIRST, t_49346.\"ID_FIRST\" AS ID_FIRST FROM (\"parent1\" AS t_40379 JOIN \"child\" AS t_49346 ON ((t_40379.\"ID_FIRST\"=t_49346.\"ID_FIRST\"))) JOIN \"parent2\" AS t_98671 ON ((t_98671.\"ID_SECOND\"=t_49346.\"ID_FIRST\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/parent1/{ID_FIRST}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/parent1Hasparent2>;
		rr:objectMap [ rr:template "http://example.com/parent2/{ID_THIRD}" ];
	].

<#TriplesMap50>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent2Hasparent1>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	].

<#TriplesMap51>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent1Hasparent2>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/parent2Hasparent1> ];
	].

<#TriplesMap52>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_49523.\"ID_FOURTH\" AS ID_FOURTH, t_49523.\"ID_FOURTH\" AS ID_FOURTH, t_49523.\"ID_THIRD\" AS ID_THIRD, t_49523.\"ID_THIRD\" AS ID_THIRD, t_49523.\"ID_SECOND\" AS ID_SECOND, t_49523.\"ID_SECOND\" AS ID_SECOND, t_49523.\"ID_FIRST\" AS ID_FIRST, t_49523.\"ID_FIRST\" AS ID_FIRST FROM (\"parent1\" AS t_72844 JOIN \"child\" AS t_49523 ON ((t_72844.\"ID_FIRST\"=t_49523.\"ID_FIRST\"))) JOIN \"parent2\" AS t_34071 ON ((t_34071.\"ID_SECOND\"=t_49523.\"ID_FIRST\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/parent1/{ID_FIRST}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/parent1Hasparent2>;
		rr:objectMap [ rr:template "http://example.com/parent2/{ID_THIRD}" ];
	].

<#TriplesMap53>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent2Hasparent1>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	].

<#TriplesMap54>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent1Hasparent2>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/parent2Hasparent1> ];
	].

<#TriplesMap55>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_13420.\"ID_FOURTH\" AS ID_FOURTH, t_13420.\"ID_FOURTH\" AS ID_FOURTH, t_13420.\"ID_THIRD\" AS ID_THIRD, t_13420.\"ID_THIRD\" AS ID_THIRD, t_13420.\"ID_SECOND\" AS ID_SECOND, t_13420.\"ID_SECOND\" AS ID_SECOND, t_13420.\"ID_FIRST\" AS ID_FIRST, t_13420.\"ID_FIRST\" AS ID_FIRST FROM (\"parent1\" AS t_11739 JOIN \"child\" AS t_13420 ON ((t_11739.\"ID_FIRST\"=t_13420.\"ID_FIRST\"))) JOIN \"parent2\" AS t_29713 ON ((t_29713.\"ID_SECOND\"=t_13420.\"ID_FIRST\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/parent1/{ID_FIRST}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/parent1Hasparent2>;
		rr:objectMap [ rr:template "http://example.com/parent2/{ID_THIRD}" ];
	].

<#TriplesMap56>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent2Hasparent1>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	].

<#TriplesMap57>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent1Hasparent2>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/parent2Hasparent1> ];
	].

<#TriplesMap58>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_42048.\"ID_FOURTH\" AS ID_FOURTH, t_42048.\"ID_FOURTH\" AS ID_FOURTH, t_42048.\"ID_THIRD\" AS ID_THIRD, t_42048.\"ID_THIRD\" AS ID_THIRD, t_42048.\"ID_SECOND\" AS ID_SECOND, t_42048.\"ID_SECOND\" AS ID_SECOND, t_42048.\"ID_FIRST\" AS ID_FIRST, t_42048.\"ID_FIRST\" AS ID_FIRST FROM (\"parent1\" AS t_62541 JOIN \"child\" AS t_42048 ON ((t_62541.\"ID_FIRST\"=t_42048.\"ID_FIRST\"))) JOIN \"parent2\" AS t_85627 ON ((t_85627.\"ID_SECOND\"=t_42048.\"ID_FIRST\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/parent1/{ID_FIRST}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/parent1Hasparent2>;
		rr:objectMap [ rr:template "http://example.com/parent2/{ID_THIRD}" ];
	].

<#TriplesMap59>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent2Hasparent1>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	].

<#TriplesMap60>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent1Hasparent2>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/parent2Hasparent1> ];
	].

<#TriplesMap61>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_63884.\"ID_FOURTH\" AS ID_FOURTH, t_63884.\"ID_FOURTH\" AS ID_FOURTH, t_63884.\"ID_THIRD\" AS ID_THIRD, t_63884.\"ID_THIRD\" AS ID_THIRD, t_63884.\"ID_SECOND\" AS ID_SECOND, t_63884.\"ID_SECOND\" AS ID_SECOND, t_63884.\"ID_FIRST\" AS ID_FIRST, t_63884.\"ID_FIRST\" AS ID_FIRST FROM (\"parent1\" AS t_68187 JOIN \"child\" AS t_63884 ON ((t_68187.\"ID_FIRST\"=t_63884.\"ID_FIRST\"))) JOIN \"parent2\" AS t_25908 ON ((t_25908.\"ID_SECOND\"=t_63884.\"ID_FIRST\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/parent1/{ID_FIRST}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/parent1Hasparent2>;
		rr:objectMap [ rr:template "http://example.com/parent2/{ID_THIRD}" ];
	].

<#TriplesMap62>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent2Hasparent1>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	].

<#TriplesMap63>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent1Hasparent2>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/parent2Hasparent1> ];
	].

<#TriplesMap64>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_19845.\"ID_FOURTH\" AS ID_FOURTH, t_19845.\"ID_FOURTH\" AS ID_FOURTH, t_19845.\"ID_THIRD\" AS ID_THIRD, t_19845.\"ID_THIRD\" AS ID_THIRD, t_19845.\"ID_SECOND\" AS ID_SECOND, t_19845.\"ID_SECOND\" AS ID_SECOND, t_19845.\"ID_FIRST\" AS ID_FIRST, t_19845.\"ID_FIRST\" AS ID_FIRST FROM (\"parent1\" AS t_56707 JOIN \"child\" AS t_19845 ON ((t_56707.\"ID_FIRST\"=t_19845.\"ID_FIRST\"))) JOIN \"parent2\" AS t_61317 ON ((t_61317.\"ID_SECOND\"=t_19845.\"ID_FIRST\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/parent1/{ID_FIRST}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/parent1Hasparent2>;
		rr:objectMap [ rr:template "http://example.com/parent2/{ID_THIRD}" ];
	].

<#TriplesMap65>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/parent2Hasparent1>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/parent1> ];
	].

