@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix foaf: <http://xmlns.com/foaf/0.1#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix dc: <http://purl.org/dc/elements/1.1#> .
@prefix rev: <http://purl.org/stuff/rev#> .
@prefix foaf: <http://xmlns.com/foaf/0.1#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix foaf: <http://xmlns.com/foaf/0.1#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix dc: <http://purl.org/dc/elements/1.1#> .
@prefix dc: <http://purl.org/stuff/rev#> .
@prefix rev: <http://purl.org/stuff/rev#> .
@prefix bsbm: <http://www4.wiwiss.fu-berlin.de/bizer/bsbm/v01/vocabulary/> .
@prefix bsbm-inst: <http://www4.wiwiss.fu-berlin.de/bizer/bsbm/v01/vocabulary/> .
@prefix ex: <http://example.com/> .

@base <http://mappingpedia.org/rdb2rdf/r2rml/tc/> .

<#TriplesMap1>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "parent1"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/parent1/{ID_FIRST}/parent1/{ID_SECOND}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Parent1>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Parent1#id_first>;
		rr:objectMap [ rr:column "ID_FIRST"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Parent1#id_second>;
		rr:objectMap [ rr:column "ID_SECOND"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Parent1#name>;
		rr:objectMap [ rr:column "NAME"; rr:datatype xsd:string; ];
	].

<#TriplesMap2>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Parent1#id_first>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Parent1> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap3>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Parent1#id_second>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Parent1> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap4>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Parent1#name>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Parent1> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap5>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Parent1>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap6>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "parent2"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/parent2/{ID_THIRD}/parent2/{ID_FOURTH}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Parent2>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Parent2#id_third>;
		rr:objectMap [ rr:column "ID_THIRD"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Parent2#id_fourth>;
		rr:objectMap [ rr:column "ID_FOURTH"; rr:datatype xsd:integer; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Parent2#name>;
		rr:objectMap [ rr:column "NAME"; rr:datatype xsd:string; ];
	].

<#TriplesMap7>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Parent2#id_third>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap8>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Parent2#id_fourth>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap9>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Parent2#name>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap10>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Parent2>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap11>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:tableName "child"; 
	];

	rr:subjectMap [
		rr:template "http://example.com/child/{ID_FIRST}/{ID_SECOND}/{ID_THIRD}/{ID_FOURTH}";
		rr:termType rr:IRI;
		rr:class <http://example.com/Child>;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Child#parent1>;
		rr:objectMap [ rr:template "http://example.com/parent1/{ID_FIRST}" ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Child#parent1>;
		rr:objectMap [ rr:template "http://example.com/parent1/{ID_SECOND}" ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Child#parent2>;
		rr:objectMap [ rr:template "http://example.com/parent2/{ID_THIRD}" ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Child#parent2>;
		rr:objectMap [ rr:template "http://example.com/parent2/{ID_FOURTH}" ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Child#COMMENTS>;
		rr:objectMap [ rr:column "COMMENTS"; rr:datatype xsd:string; ];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Child#ref-ID_FIRST>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap1>;
			rr:joinCondition [
				rr:child "ID_FIRST";
				rr:parent "ID_FIRST";
			];
			rr:joinCondition [
				rr:child "ID_SECOND";
				rr:parent "ID_SECOND";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Child#ref-ID_SECOND>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap1>;
			rr:joinCondition [
				rr:child "ID_FIRST";
				rr:parent "ID_FIRST";
			];
			rr:joinCondition [
				rr:child "ID_SECOND";
				rr:parent "ID_SECOND";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Child#ref-ID_THIRD>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap6>;
			rr:joinCondition [
				rr:child "ID_THIRD";
				rr:parent "ID_THIRD";
			];
			rr:joinCondition [
				rr:child "ID_FOURTH";
				rr:parent "ID_FOURTH";
			];
		];
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Child#ref-ID_FOURTH>;
		rr:objectMap [
			rr:parentTriplesMap <#TriplesMap6>;
			rr:joinCondition [
				rr:child "ID_THIRD";
				rr:parent "ID_THIRD";
			];
			rr:joinCondition [
				rr:child "ID_FOURTH";
				rr:parent "ID_FOURTH";
			];
		];
	].

<#TriplesMap12>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Child#id_first>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Child> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap13>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Child#id_second>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Child> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap14>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Child#id_third>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Child> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap15>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Child#id_fourth>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Child> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:integer ];
	].

<#TriplesMap16>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Child#comments>;
		rr:termType rr:IRI;
		rr:class owl:DatatypeProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Child> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant xsd:string ];
	].

<#TriplesMap17>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Child>;
		rr:termType rr:IRI;
		rr:class owl:Class;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:subClassOf;
		rr:objectMap [ rr:constant owl:Thing ];
	].

<#TriplesMap18>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Parent1HasParent2>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Parent1> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/Parent2hasParent1> ];
	].

<#TriplesMap19>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_63702.\"ID_FOURTH\" AS ID_FOURTH, t_63702.\"ID_THIRD\" AS ID_THIRD, t_63702.\"ID_SECOND\" AS ID_SECOND, t_63702.\"ID_FIRST\" AS ID_FIRST FROM (\"parent1\" AS t_23499 JOIN \"child\" AS t_63702 ON ((t_23499.\"ID_FIRST\"=t_63702.\"ID_FIRST\"))) JOIN \"parent2\" AS t_40189 ON ((t_40189.\"ID_SECOND\"=t_63702.\"ID_SECOND\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Parent1/{ID_FIRST}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Parent1HasParent2>;
		rr:objectMap [ rr:template "http://example.com/Parent2/{ID_THIRD}" ];
	].

<#TriplesMap20>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Parent2hasParent1>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Parent1> ];
	].

<#TriplesMap21>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Parent1HasParent2>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Parent1> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/Parent2hasParent1> ];
	].

<#TriplesMap22>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_89698.\"ID_FOURTH\" AS ID_FOURTH, t_89698.\"ID_THIRD\" AS ID_THIRD, t_89698.\"ID_SECOND\" AS ID_SECOND, t_89698.\"ID_FIRST\" AS ID_FIRST FROM (\"parent1\" AS t_13127 JOIN \"child\" AS t_89698 ON ((t_13127.\"ID_FIRST\"=t_89698.\"ID_FIRST\"))) JOIN \"parent2\" AS t_05526 ON ((t_05526.\"ID_SECOND\"=t_89698.\"ID_SECOND\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Parent1/{ID_FIRST}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Parent1HasParent2>;
		rr:objectMap [ rr:template "http://example.com/Parent2/{ID_THIRD}" ];
	].

<#TriplesMap23>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Parent2hasParent1>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Parent1> ];
	].

<#TriplesMap24>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Parent1HasParent2>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Parent1> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/Parent2hasParent1> ];
	].

<#TriplesMap25>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_80453.\"ID_FOURTH\" AS ID_FOURTH, t_80453.\"ID_THIRD\" AS ID_THIRD, t_80453.\"ID_SECOND\" AS ID_SECOND, t_80453.\"ID_FIRST\" AS ID_FIRST FROM (\"parent1\" AS t_45810 JOIN \"child\" AS t_80453 ON ((t_45810.\"ID_FIRST\"=t_80453.\"ID_FIRST\"))) JOIN \"parent2\" AS t_85856 ON ((t_85856.\"ID_SECOND\"=t_80453.\"ID_SECOND\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Parent1/{ID_FIRST}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Parent1HasParent2>;
		rr:objectMap [ rr:template "http://example.com/Parent2/{ID_THIRD}" ];
	].

<#TriplesMap26>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Parent2hasParent1>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Parent1> ];
	].

<#TriplesMap27>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Parent1HasParent2>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Parent1> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate owl:inverseOf;
		rr:objectMap [ rr:constant <http://example.com/Parent2hasParent1> ];
	].

<#TriplesMap28>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT DISTINCT t_27898.\"ID_FOURTH\" AS ID_FOURTH, t_27898.\"ID_THIRD\" AS ID_THIRD, t_27898.\"ID_SECOND\" AS ID_SECOND, t_27898.\"ID_FIRST\" AS ID_FIRST FROM (\"parent1\" AS t_37681 JOIN \"child\" AS t_27898 ON ((t_37681.\"ID_FIRST\"=t_27898.\"ID_FIRST\"))) JOIN \"parent2\" AS t_00801 ON ((t_00801.\"ID_SECOND\"=t_27898.\"ID_SECOND\"))" 
	];

	rr:subjectMap [
		rr:template "http://example.com/Parent1/{ID_FIRST}";
		rr:termType rr:IRI;
	];

	rr:predicateObjectMap [
		rr:predicate <http://example.com/Parent1HasParent2>;
		rr:objectMap [ rr:template "http://example.com/Parent2/{ID_THIRD}" ];
	].

<#TriplesMap29>
	a rr:TriplesMap;

	rr:logicalTable [ 
		rr:sqlQuery "SELECT 1 FROM INFORMATION_SCHEMA.TABLES LIMIT 1" 
	];

	rr:subjectMap [
		rr:constant <http://example.com/Parent2hasParent1>;
		rr:termType rr:IRI;
		rr:class owl:ObjectProperty;
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:domain;
		rr:objectMap [ rr:constant <http://example.com/Parent2> ];
	];

	rr:predicateObjectMap [
		rr:predicate rdfs:range;
		rr:objectMap [ rr:constant <http://example.com/Parent1> ];
	].

